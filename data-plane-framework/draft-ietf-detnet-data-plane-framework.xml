<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc3031 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3031.xml">
<!ENTITY rfc3985 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3985.xml">
<!ENTITY rfc4385 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4385.xml">
<!ENTITY rfc4872 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4872.xml">
<!ENTITY rfc4873 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4873.xml">
<!ENTITY rfc6387 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6387.xml">
<!ENTITY I-D.ietf-pce-pcep-extension-for-pce-controller PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-pce-pcep-extension-for-pce-controller.xml">
<!ENTITY I-D.ietf-detnet-problem-statement PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-detnet-problem-statement.xml">
<!ENTITY I-D.ietf-detnet-architecture PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-detnet-architecture.xml">
<!ENTITY I-D.ietf-detnet-flow-information-model PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-detnet-flow-information-model.xml">

]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="info"
     docName="draft-ietf-detnet-data-plane-framework-00"
     ipr="trust200902"
     submissionType="IETF">
  <front>
    <title abbrev="DetNet Data Plane Framework">
    DetNet Data Plane Framework</title>

    <author role="editor" fullname="Bal&aacute;zs Varga" initials="B." surname="Varga">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>Magyar Tudosok krt. 11.</street>
          <city>Budapest</city>
          <country>Hungary</country>
          <code>1117</code>
        </postal>
        <email>balazs.a.varga@ericsson.com</email>
      </address>
    </author>

    <author fullname="J&aacute;nos Farkas" initials="J." surname="Farkas">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>Magyar Tudosok krt. 11.</street>
          <city>Budapest</city>
          <country>Hungary</country>
          <code>1117</code>
        </postal>
        <email>janos.farkas@ericsson.com</email>
      </address>
    </author>

    <author fullname="Lou Berger" initials="L." surname="Berger">
      <organization>LabN Consulting, L.L.C.</organization>
      <address>
        <email>lberger@labn.net</email>
      </address>
    </author>

    <author fullname="Andrew G. Malis" initials="A.G." surname="Malis">
      <organization>Huawei Technologies</organization>
      <address>
        <email>agmalis@gmail.com</email>
      </address>
    </author>

    <author fullname="Stewart Bryant" initials="S." surname="Bryant">
      <organization>Huawei Technologies</organization>
      <address>
        <email>stewart.bryant@gmail.com</email>
      </address>
    </author>

    <author fullname="Jouni Korhonen" initials="J." surname="Korhonen">
      <!--organization abbrev="Nordic">Nordic Semiconductor</organization-->
      <address>
        <email>jouni.nospam@gmail.com</email>
      </address>
    </author>

    <!--author fullname="Donald Fauntleroy Duck" initials="D. F." surname="Duck">
        <organization abbrev="Royal Bros.">Royal Bros.</organization>
        <address>
        <postal>
        <street>13 Paradise Road</street>
        <city>Duckburg</city>
        <region>Calisota</region>
        <country>USA</country>
        </postal>
        </address>
        </author-->
    <date />
    <workgroup>DetNet</workgroup>

    <abstract>
      <t>
        This document provides an overall framework for the Deterministic
        Networking data plane.  It covers concepts and considerations that
        are generally common to any Deterministic Networking data plane
        specification.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction" anchor="sec_intro">
      <t>
        Deterministic Networking (DetNet) is a service that can be offered
        by a network to DetNet flows.  DetNet provides these flows with
        low packet loss rates and assured maximum end-to-end delivery
        latency.  A description of the general background and concepts of DetNet can be found in
        <xref target="I-D.ietf-detnet-architecture"/>.
      </t>
       <t>
        This document describes the concepts needed by any DetNet data plane specification
        and provides considerations for any corresponding implementation.
        It covers the building blocks that provide the DetNet service, the
        forwarding sub-layer functions, and the flow identification as described
        in the DetNet Architecture.
      </t>
      <t> 
        The DetNet Architecture decomposes the DetNet related data plane
        functions into two sub-layers: a service sub-layer and a forwarding
        sub-layer.  The service sub-layer is used to provide DetNet service
        protection and reordering. The forwarding sub-layer is used to
        provide congestion protection (low loss, assured latency, and
        limited reordering) and leverages Traffic Engineering mechanisms.
      </t>
      <t>
        As part of the service sub-layer functions, this document describes
        typical DetNet node data plane operation. It describes the function
        and operation of the Packet Replication (PRF) Packet Elimination
        (PEF) and the Packet Ordering (POF) functions within the service
        sub-layer. It also describes the forwarding sub-layer that is used to eliminate
        (or reduce) contention loss and provide bounded latency for DetNet
        flows.
      </t>
      <t>
        DetNet flows may be carried over network technologies that can
        provide the DetNet required level of service.  For example, DetNet
        MPLS flows can be carried over IEEE 802.1 Time Sensitive Network
        (TSN) sub-networks. However, IEEE 802.1 TSN support is not required
        and some of the DetNet benefits can be gained by running over a data link
        layer that has not been specificaly enhanced to support TSN.
      </t>
      <t>
        Different traffic types, or application flows, can be mapped on top
        of DetNet.  DetNet can optionally reuse header information provided
        by, or shared with, applications. An example of such can be found in
        <xref target="I-D.ietf-detnet-ip"/>.
      </t>
      <t>  
        This document also covers
        concepts related to the controller plane and Operations,
        Administration, and Maintenance (OAM) functions.
      </t>

    </section>

    <section title="Terminology">
      <section title="Terms Used in This Document">
        <t>
          This document uses the terminology established in the DetNet
          architecture <xref target="I-D.ietf-detnet-architecture"/>,
          and the reader is assumed to be familiar with that document
          and its terminology.
        </t>
      </section>

      <section title="Abbreviations">
        <t>
          The following abbreviations are used in this document:
          <list style="hanging" hangIndent="14">
            <t hangText="CW">Control Word.</t>
            <t hangText="DetNet">Deterministic Networking.</t>
            <t hangText="L2">Layer 2.</t>
            <t hangText="L2VPN">Layer 2 Virtual Private Network.</t>
            <t hangText="LSR">Label Switching Router.</t>
            <t hangText="MPLS">Multiprotocol Label Switching.</t>
            <t hangText="MPLS-TE">Multiprotocol Label Switching - Traffic Engineering.</t>
            <t hangText="OAM">Operations, Administration, and Maintenance.</t>
            <t hangText="PEF">Packet Elimination Function.</t>
            <t hangText="PRF">Packet Replication Function.</t>
            <t hangText="PREOF">Packet Replication, Elimination and Ordering Functions.</t>
            <t hangText="POF">Packet Ordering Function.</t>
            <t hangText="PSN">Packet Switched Network.</t>
            <t hangText="PW">PseudoWire.</t>
            <t hangText="QoS">Quality of Service.</t>
            <t hangText="TSN">Time-Sensitive Network.</t>
          </list>
        </t>
      </section>
    </section>  <!-- end of terminology -->

    <section title="DetNet Data Plane Overview" anchor="sec_dt_dp">
      <section title="Layers of DetNet Data Plane" anchor="sec_lay_dt_dp">
        <t>
	  This document describes how application flows, or app-flows, are
	  carried over DetNet networks. The DetNet Architecture, <xref
		  target="I-D.ietf-detnet-architecture"/>, models the DetNet
	  related data plane functions decomposed into two sub-layers: a
	  service sub-layer and a forwarding sub-layer.           </t>
	  
       <figure title="DetNet Adaptation to Data Plane" anchor="fig_ADP">
       <artwork align="center"><![CDATA[

                   DetNet        MPLS         |  IP
                     .                        |
(inner header)       .                        |
                 +------------+               |
                 |  Service   | d-CW, S-Label |  IP Protocol, IP Header 
                 +------------+               |
                 | Forwarding | F-Label(s)    |  IP Forwarding
                 +------------+               |
(outer header)       .                        |
                     .                        |
    ]]></artwork>
        </figure>
       <t>
         The DetNet forwarding layer may be directly provided by the 
         DetNet forwarding layer, for example by IP or MPLS. Alternatively
         an overlay approach may be used in which the packet is 
         natively carried  between key nodes within the DetNet network 
         (say between PREOF nodes) and a sublayer is used to provide
         the information needed to reach the next hop in the overlay.
       </t>
       <t>
         This forwarding layer provides the quality underpin needed
         by the DetNet Service layer. It may do this directly through 
         the use of queuing techniques and traffic engineering methods, or
         it may do this through the assistance of its underlying 
         connectivity. For example it may call upon IEEE 802.1 TSN
         [NEEDS REFERENCE].
       </t>
       <t>
         The service layer provides additional support beyond the 
         connectivity function of the forwarding layer. An example
         of this is Packet Replication, Elimination, and Ordering (PREOF)
         function [ADD REF].
       </t>
       <t>
         The method of instantiating each of the layers is specific to the
         particular DetNet data plane method. There may be more than approach
         that is applicable to a given bearer network type. 
       </t>
      </section>

      <section title="Data Plane Characteristics" anchor="sec_dp_char">
      <t>
	There are two major characteristics to the data plane:
        <list style='numbers'>
	  <t> Whether the DetNet flows are carried in there native form across
              the DetNet network, or whether they are encapsulated.
          </t>
          <t> Whether or not the DetNet data plane incudes the facility to 
              carry additional information (metadata) that can be used to provide an
              enhanced service to the DetNet packet.            
          </t>
        </list>
      </t>
      </section>
      <section title="Encapsulation" anchor="sec_dp_encap">
         <t>
           The encapsulation of the DetNet flows allows them to be sent over a data plane
           of a type other than their native type. Encapsulation is essential if, for example,
           it is required to sent Ethernet DetNet flows over a data plane such as MPLS.
         </t>
         <t>
           The use of encapsulation is also required if additional information (meta-data) is needed
           by the DetNet data plane and their is either no ability to include it in the 
           client data packet, or the specification of the client data plane do not
           permit the modification of the packet to include additional data. An example of such
           meta-data is the inclusion of a sequence number required by the PREOF function. 
         </t>
         <t>
           Encalsulation is also needed if the DetNet flow or agregate flow is not easily 
           recognised from from its native encapsulation.
         </t>
      </section>
      <section title="Metadata" anchor="sec_dp_metadata">
         <t>
           Metadata can be a useful way of identifying packets that need to be treated as a 
           flow or flow agregate. It is also useful as a way of including a sequence number
           the packet for use by the PREOF function or as a place to carry OAM indications 
           or OAM information to instrument DetNet data plane operation. 
         </t>
      </section>

      <section title="DetNet IP Data Plane" anchor="sec_dt_ip_dp">
        <t>
          An IP data plane may operate natively or through the use of an
          encapsulation. There are many IP encapsulations that may be 
          interposed between the DetNet data plane IP header and the DetNet 
          payload, and it is anticipated that more than one encapulation
          may be deployed.
        </t>
        <t>
          One method of operating an IP DetNet data plane without 
          encapsulation is to use "6-tuple" based flow identification, 
          where "6-tuple" refers to information carried in IP and 
          higher layer protocol headers. General background on the use 
          of IP headers, and "5-tuples", to identify flows and support 
          Quality of Service (QoS) can be found in <xref target="RFC3670"/>.  
          <xref target="RFC7657"/> also provides useful background on the
          delivery differentiated services (DiffServ) and "6-tuple" based
          flow identification. 
          DetNet flow aggregation may be enabled via the use of
          wildcards, masks, prefixes and ranges.
          The operation of this method is described in detail in [ID.ietf-detnet-ip].
        </t>
        <t>
          The DetNet forwarding plane may use explict route cabability and 
          traffic engineering capabilities to provide a forwarding
          sub-layer that is responsible for providing resource
	  allocation and explicit routes.  
          It is possible to include metadata in a native IP packet explicitly, or
          implicitly. 
        </t>
        <t>
          Explicit inclusion of metadata is possible through the use of 
          IP options or IP extension headers. New IP options are almost impossible
          to get standardized or to deploy in an operational network and will
          not be discussed further in this text. IPv6 extensions headers are
          finding popularity in current IPv6 development work, particularly
          in connection with Segment Routing of IPv6 (SRv6) and IOAM. The design
          of a new IPv6 extension header or the modification of an existing one is 
          a technique in the tool box of the DetNet IP data plane designer.
        </t>
        <t>
          Explicit inclusion of metadata in an IP packet is also possible through the 
          inclusion of an MPLS label stack and the MPLS DetNet Control Word using
          one of the methods for carrying MPLS over IP [NEED REFERENCES]. This
          is described in more detail in [NEED REFERENCE].
        </t>
        <t>
          Implicit metadata can be included through the use of the network 
          programming paradygm [NEED REFERENCE] in which the suffix of an IPv6
          address is used to encode additional information for use by the network 
          of the receiving host. Examples of such information include the sequence
          number for use by the PREOF function, or indeed the whole of the essential 
          information being deigned into the DetNet over MPLS label stack
          (the DetNet Control Word and the DetNet Service lable).
        </t>
      </section>

      <section title="DetNet Data Plane Scenarios"
               anchor="sec_dt_dp_scen">

        <figure anchor="dn_fmwrk_stacks" align="center"
                title="DetNet Service and Forwarding stacks">
	<artwork align="center"><![CDATA[
			
                                     +-----+
                                     | TSN |       
DetNet          +-------+          +-+-----+-+
Service         | DN IP |          | DN MPLS |
Stacks       +--+--+----+----+   +-+---+-----+-+
             | TSN | DN MPLS |   | TSN | DN IP |
             +-----+---------+   +-----+-------+
       
DetNet        +-------+  +---------+  +-----+ 
Services      | DN IP |  | DN MPLS |  | TSN |
              +-------+  +---------+  +-----+

    ]]></artwork>
        </figure>

	<t>
	<xref target="dn_fmwrk_stacks"/> illustrates the service stack
	combinations for DetNet. At the service layer IP, MPLS and TSN (as an
	L2 VPN) offer detnet services. (TSN is also a native L2 DetNet Service
	covered in <xref target="IEEE8021Q"/>.) These services can be stacked
	as illustrated. For example, IP DetNet can be delivered purely as an IP
	service.  Or IP DetNet can leverage MPLS for service and forwarding or
	just MPLS forwaring.  As a result IP DenNet can have acces to MPLS
	traffic Engineering.  Alternatively IP DetNet can leverage TSN by
	leveraging Ethenret with TSN. The diagram shows several common
	permutations. 
         </t>

      </section>
      <section title="DetNet MPLS Data Plane" anchor="sec_dt_mpls_dp">
        <t>
          MPLS provides the abbility to forward traffic over implicit 
          and explicit paths to the point in the network where the next
          DetNet service layer action needs to take place. It does this
          through the use of a stack of one or more labels with various
          forwarding semantics.
        </t>
        <t>
          MPLS also provides the ability to identify a service instance
          that is to process the packet through the use of a label that 
          maps the packet to a service instance.
        </t>
        <t>
          In cases where metadata is needed to process an MPLS encapsulated 
          packet at the service layer, this has been been provided through the 
          use of a shim layer also called a control word (CW)  <xref target="RFC4385"/>.
          Although such CWs are requently 32 bits long, there is no architectural
          constraint on its size of this structure, only the requirement
          that it is fully understood by all parties operating on it in the
          DetNet service layer.
        </t>
      </section>
    </section>

<section title="Further DetNet Data Plane Considerations" anchor="further_dn_dp_consid">
  <t>
    This section needs further work.
  </t>
  <t>
    This section provides informative considerations related to
    providing DetNet service to flows which are identified
    based on their header information. At a high level, the
    following are provided on a per flow basis:
    <list style="hanging">
      <t hangText="Eliminating contention loss and jitter reduction:">
        <vspace blankLines="1"/>
        Use of allocated resources (queuing, policing, shaping) to ensure
        that the congestion-related loss and latency/jitter requirements of
        a DetNet flow are met.
      </t>
      <t hangText="Explicit routes:">
        <vspace blankLines="1"/>
        Use of a specific path for a flow.  This limits
        misordering and bounds latency.
      </t>

      <t hangText="Service protection:">
        <vspace blankLines="1"/>
        Which in the case of this document primarily relates to
        replication and elimination. Changing the explicit path after a
        failure is detected in order to restore delivery of the required
        DetNet service characteristics is also possible. Path changes,
        even in the case of failure recovery, can lead to the out of
        order delivery of data.
      </t>
      <t hangText="Load sharing:">
        <vspace blankLines="1"/>
        Generally, distributing packets of the same DetNet flow over
        multiple paths is not recommended. Such load sharing,
        e.g., via ECMP or UCMP, impacts ordering and possibly jitter.
      </t>
      <t hangText="Troubleshooting:"> <vspace blankLines="1"/>
      For example, to support identification of misbehaving flows.
      </t>
      <t hangText="Recognize flow(s) for analytics:"><vspace blankLines="1"/>
      For example, increase counters.
      </t>
      <t hangText="Correlate events with flows:"><vspace blankLines="1"/>
      For example, unexpected loss.
      </t>
    </list>
  </t>

  <t>
  The DetNet data plane also allows for the aggregation of DetNet flows,
  to improved scaling. How this is done is data plane dependent.  When DetNet
  flows are aggregated, transit nodes provide service to the aggregate
  and not on a per-DetNet flow basis.  In this case, nodes performing
  aggregation will ensure that per-flow service requirements are
  achieved.
 </t>

 <section title="End-System Specific Considerations">
  <t>
    This section needs further work.
  </t>
  <t>
   Data-flows requiring DetNet service are generated and terminated on
   end-systems. Encapsulation depends on application and its
   preferences. For example, a DetNet MPLS domain the DN functions use the d-CWs,
   S-Labels and F-Labels to provide DetNet services. However, an
   application may exchange further flow related parameters (e.g.,
   time-stamp), which are not provided by DN functions.
  </t>

  <t>
    Specifics related to non-MPLS DetNet end station behavior are out
    side the scope of this document.  For example, details on support
    for DetNet IP data flows can be found in <xref
    target="I-D.ietf-detnet-ip"/>. This document is also useful
    for end stations that map IP flows to DetNet flows.
  </t>
  <t>
    EDITORS NOTE FOLLOWING PARA NEEDS MORE WORK
  </t>
  <t> 
   As a general rule, DetNet MPLS domains are capable of forwarding any
   DetNet MPLS flows and the DetNet domain does not mandate the
   end-system or edge system encapsulation format. Unless there is a
   proxy of some form present, end-systems peer with similar end-systems
   using the same application encapsulation format.  For example, as
   shown in <xref target="fig_es_connect"/>, IP applications peer with
   IP applications and Ethernet L2VPN applications peer with Ethernet
   L2VPN applications.
  </t>

  <figure title="End-Systems and The DetNet MPLS Domain" anchor="fig_es_connect">
  <artwork align="center"><![CDATA[
+-----+
|  X  |                               +-----+
+-----+                               |  X  |
| Eth |               ________        +-----+
+-----+     _____    /        \       | Eth |
       \   /     \__/          \___   +-----+
        \ /                        \ /
         0======== tunnel-1 ========0_
         |                             \
          \                             |
          0========= tunnel-2 =========0
         / \                        __/ \
  +-----+   \__ DetNet MPLS domain /     \
  |  X  |      \         __       /       +-----+
  +-----+       \_______/  \_____/        |  X  |
  |  IP |                                 +-----+
  +-----+                                 |  IP |
                                          +-----+
  ]]>
    </artwork></figure>

 </section>
 <section title="Sub-Network Considerations">
  <t>
    This section needs further work.
  </t>   
   <t>
     As shown in <!-- <xref target="fig_dn_mpls_detnet"/> -->, MPLS nodes are
     interconnected by different sub-network technologies, which may
     include point-to-point links. Each of these need to provide
     appropriate service to DetNet flows.  In some cases, e.g., on
     dedicated point-to-point links or TDM technologies, all that is
     required is for a DetNet node to appropriately queue its output
     traffic.  In other cases, DetNet nodes will need to map DetNet
     flows to the flow semantics (i.e., identifiers) and mechanisms used
     by an underlying sub-network technology.  <!--<xref
     target="fig_dn_mpls_sn_ex"/> -->shows several examples of header
     formats that can be used to carry DetNet MPLS flows over different
     sub-network technologies.  L2 represent a generic layer-2
     encapsulation that might be used on a point-to-point link.  TSN
     represents the encapsulation used on an IEEE 802.1 TSN network, as
     described in <!-- <xref target="mpls-over-tsn"/> -->.  UDP/IP represents the
     encapsulation used on a DetNet IP PSN, as described in <!-- <xref
     target="mpls-over-ip"/> -->.     
   </t>
   

  <figure title="Example DetNet MPLS Sub-Network Formats" anchor="fig_dn_mpls_sn_ex">
  <artwork align="center"><![CDATA[

                   +------+  +------+  +------+
App-Flow           |  X   |  |  X   |  |  X   |
             +-----+======+--+======+--+======+-----+
DetNet-MPLS        | d-CW |  | d-CW |  | d-CW |
                   +------+  +------+  +------+
                   |Labels|  |Labels|  |Labels|
             +-----+======+--+======+--+======+-----+
Sub-Network        |  L2  |  | TSN  |  | UDP  |
                   +------+  +------+  +------+
                                       |  IP  |
                                       +------+
                                       |  L2  |
                                       +------+
    ]]>
  </artwork></figure>
 </section>
</section>

<!-- ================================================================= -->

<section title="Controller Plane (Management and Control)
                Considerations" anchor="cp_considerations">

  <section title="Generic Controller Plane 
                  Considerations" anchor="gen_cp_considerations">
    <t>
      This section covers control plane considerations that are
      independent of the data plane technology used for DetNet service
      delivery. 
    </t>
    <t>
      While management plane and control planes are traditionally
      considered separately, from the Data Plane perspective there is no
      practical difference based on the origin of flow provisioning
      information, and the DetNet architecture <xref
      target="I-D.ietf-detnet-architecture"/> refers to these collectively
      as the 'Controller Plane'.  This document therefore does not
      distinguish between information provided by distributed control
      plane protocols, e.g., RSVP-TE <xref target="RFC3209"/> and <xref
      target="RFC3473"/>, or by centralized network management mechanisms,
      e.g., RestConf <xref target="RFC8040"/>, YANG <xref
      target="RFC7950"/>, and the Path Computation Element Communication
      Protocol (PCEP) <xref
      target="I-D.ietf-pce-pcep-extension-for-pce-controller"/> or any
      combination thereof. Specific considerations and requirements for
      the DetNet Controller Plane are discussed in <xref
      target="control-management-requirements"/>.
    </t>

  </section>
  <section title="IP-Specific Controller Plane 
                  Considerations" anchor="ip_cp_considerations">
    <t>
      This section covers IP data plane specific control plane considerations.
    </t>
    <section title="Flow Identification and Aggregation">
      <t>
        <xref target="sec_dt_dp"/> introduces the use of the IP
        "6-tuple" for flow identification, and <!-- <xref target="QoS"/> -->
        goes on to discuss how identified flows use specific QoS
        mechanisms for flow-specific traffic treatment, including path
        control and resource allocation. XXX <!-- <xref target="ip-flow-id"/> -->
        contains detailed DetNet IP flow identification
        procedures. Flow identification will play an important role
        for the DetNet controller plane.
      </t>
      <t>
        XXX and YYY <!-- <xref target="aggregation"/> and <xref target="ip-agg"/> -->
        discuss the use of flow aggregation in DetNet. Flow
        aggregation can be accomplished using any of the 6-tuple
        fields defined in XXX <!-- <xref target="ip-flow-id"/> -->, using a DSCP
        identified traffic class or other field. It will be the
        responsibility of the DetNet controller plane to be able to
        properly provision the use of these aggregation
        mechanisms. These requirements are included in <xref
        target="control-management-requirements"/>.
      </t>
    </section>
    <section title="Explcit Routes">
      <t>
        Explicit routes are used to ensure that packets are routed
        through the resources that have been reserved for them, and
        hence provide the DetNet application with the required
        service. A requirement for the DetNet Controller Plane will be
        the ability to assign a particular identified DetNet IP flow
        to a path through the DetNet domain that has been assigned the
        required nodal resources to provide the appropriate traffic
        treatment for the flow, and also to include particular links
        as a part of the path that are able to support the DetNet
        flow, for example by using IEEE 802.1 TSN links (as discussed
        in XXX <!-- <xref target="mapping-tsn"/> -->). Further considerations and
        requirements for the DetNet Controller Plane are discussed in
        <xref target="control-management-requirements"/>.
      </t>
      <t>
        Whether configuring, calculating and instantiating these
        routes is a single-stage or multi-stage process, or in a
        centralized or distributed manner, is out of scope of this
        document.
      </t>
      <t>
        There are several of approaches that could be used to provide
        explicit routes and resource allocation in the DetNet
        layer. For example:
        <list style="symbols">
          <t>
            The path could be explicitly set up by a controller which
            calculates the path and explicitly configures each node
            along that path with the appropriate forwarding and
            resource allocation information.
          </t>
          <t>
            The path could be used a distributed control plane such as
            <xref target="RFC2205">RSVP</xref> or RSVP-TE <xref
            target="RFC3473"/> extended to support DetNet IP flows.
          </t>
          <t>
            The path could be implemented using IPv6-based segment
            routing when extended to support resource allocation.
          </t>
        </list>
        See <xref target="control-management-requirements"/> for
        further discussion of these alternatives. In addition, <xref
        target="RFC2386"/> contains useful background information on
        QoS-based routing, and <xref target="RFC5575"/> discusses a
        specific mechanism used by BGP for traffic flow specification
        and policy-based routing.
      </t>
    </section>
    <section title="Contention Loss and Jitter Reduction">
      <t>
        As discussed in <xref target="sec_intro"/>, this document does
        not specify the mechanisms needed to eliminate contention loss
        or reduce jitter for DetNet flows at the DetNet forwarding
        sub-layer.  The ability to manage node and link resources to
        be able to provide these functions will be a necessary part of
        the DetNet controller plane. It will also be necessary to be
        able to control the required queuing mechanisms used to
        provide these functions along a flow's path through the
        network. See XXX <!-- <xref target="ip-svc"/> --> and <xref
        target="control-management-requirements"/> for further
        discussion of these requirements.
      </t>
    </section>
    <section title="Bidirectional Traffic">
      <t>
        Some DetNet applications generate bidirectional traffic.
        Although this document discusses the DetNet IP data plane,
        MPLS definitions <xref target="RFC5654"/> are useful to
        illustrate terms such as associated bidirectional flows and
        co-routed bidirectional flows.  MPLS defines a point-to-point
        associated bidirectional LSP as consisting of two
        unidirectional point-to-point LSPs, one from A to B and the
        other from B to A, which are regarded as providing a single
        logical bidirectional forwarding path.  This is analogous to
        standard IP routing.  MPLS defines a point-to-point co-routed
        bidirectional LSP as an associated bidirectional LSP which
        satisfies the additional constraint that its two
        unidirectional component LSPs follow the same path (in terms
        of both nodes and links) in both directions.  An important
        property of co-routed bidirectional LSPs is that their
        unidirectional component LSPs share fate.  In both types of
        bidirectional LSPs, resource reservations may differ in each
        direction.  The concepts of associated bidirectional flows and
        co-routed bidirectional flows can also be applied to DetNet IP
        flows.
      </t>
      <t>
        While the DetNet IP data plane must support bidirectional
        DetNet flows, there are no special bidirectional features with
        respect to the data plane other than the need for the two
        directions of a co-routed bidirectional flow to take the same
        path. That is to say that bidirectional DetNet flows are
        solely represented at the management and control plane levels,
        without specific support or knowledge within the DetNet data
        plane.  Fate sharing and associated vs. co-routed
        bidirectional flows can be managed at the control level.
      </t>
      <t>
        Control and management mechanisms will need to support
        bidirectional flows, but the specification of such mechanisms
        are out of scope of this document. An example control plane
        solution for MPLS can be found in <xref target="RFC7551"/>.
      </t>
      <t>
        This is further discussed in <xref
        target="control-management-requirements"/>.
      </t>
    </section>
    <section anchor="control-management-requirements"
             title="DetNet Controller (Control and Management) Plane Requirements">
      <t>
        While the definition of controller plane for DetNet is out of
        the scope of this document, there are particular
        considerations and requirements for such that result from the
        unique characteristics of the DetNet architecture <xref
        target="I-D.ietf-detnet-architecture"/> and data plane as
        defined herein.
      </t>
      <t>
        The primary requirements of the DetNet controller plane are
        that it must be able to:
        <list style="symbols">
          <t>
            Instantiate DetNet flows in a DetNet domain (which may
            include some or all of explicit path determination, link
            bandwidth reservations, restricting flows to IEEE 802.1 TSN
            links, node buffer and other resource reservations,
            specification of required queuing disciplines along the
            path, ability to manage bidirectional flows, etc.) as needed
            for a flow.
          </t>
          <t>
            The ability to support DetNet flow aggregation
          </t>
          <t>
            Advertise static and dynamic node and link resources such
            as capabilities and adjacencies to other network nodes (for
            dynamic signaling approaches) or to network controllers (for
            centralized approaches)
          </t>
          <t>
            Scale to handle the number of DetNet flows expected in a
            domain (which may require per-flow signaling or
            provisioning)
          </t>
          <t>
            Provision flow identification information at each of the
            nodes along the path, and it may differ depending on the
            location in the network and the DetNet functionality.
          </t>
        </list>
      </t>
      <t>
        These requirements, as stated earlier, could be satisfied
        using distributed control protocol signaling, centralized
        network management provisioning mechanisms, or hybrid
        combinations of the two, and could also make use of IPv6-based
        segment routing.
      </t>
      <t>
        In the abstract, the results of either distributed signaling
        or centralized provisioning are equivalent from a DetNet data
        plane perspective - flows are instantiated, explicit routes
        are determined, resources are reserved, and packets are
        forwarded through the domain using the IP data plane.
      </t>
      <t>
        However, from a practical and implementation standpoint, they
        are not equivalent at all. Some approaches are more scalable
        than others in terms of signaling load on the network. Some
        can take advantage of global tracking of resources in the
        DetNet domain for better overall network resource
        optimization. Some are more resilient than others if link,
        node, or management equipment failures occur. While a detailed
        analysis of the control plane alternatives is out of the scope
        of this document, the requirements from this document can be
        used as the basis of a later analysis of the alternatives.
      </t>
    </section>
  </section>

  <section title="MPLS-Specific Controller Plane 
                  Considerations" anchor="mpls_cp_considerations">
    <t>
      This section covers MPLS data plane specific control plane considerations.
      This section needs generallizing. 
    </t>
    <section title="S-Label and F-Label Assignment and Distribution">
      <t>
        [Editor's note - we may need additional text on resource
        allocation in this section.]
      </t>
      <t>
        DetNet S-Labels (see XXX <!-- <xref target="flow-identification"/> --> for their
        definition) are similar to other MPLS service labels that denote the
        contents of the MPLS packet payload such as a layer 2 pseudowire, an
        IP packet that is routed in a VPN context with a private address, or
        an Ethernet virtual private network (EVPN) service.
      </t>
      <t>
        S-Labels are expected to be allocated in the same manner as any
        other service labels. S-Labels uniquely identify a particular
        DetNet flow, and are local to the node on which the label is
        allocated. In the DetNet service sub-layer the explicit route
        consists of the set of Relay Nodes that the DetNet flow must
        traverse.  They can be used to identify the DetNet flow that a
        packet belongs to as it traverses a particular node in a DetNet
        domain. Because labels are local to each node rather than being a
        global identifier within a domain, they must be advertised to their
        upstream DetNet service-aware peer nodes (e.g., a DetNet MPLS End
        System as shown in XXX <!-- <xref target="fig_pw_detnet"/> -->, or a DetNet
        Relay or Edge Node as shown in XXX <!-- <xref target="fig_pw_detnet2"/>-->) and
        interpreted in the context of their received F-Label.
      </t>
      <t>
        As discussed in <xref target="sec_dt_dp"/>, the forwarding sub-layer
        uses one or more F-Labels to forward DetNet packets between
        DetNet service-aware nodes along explicitly defined routes at the
        DetNet forwarding sub-layer, which in the context of this document is
        the MPLS layer.  F-Labels can also provide context for an S-Label.
        In the DetNet Forwarding (MPLS) sub-layer the explicit
        route consists of the set of DetNet nodes which are LSRs, links,
        and possibly link bundle members and queues that the DetNet packets
        of a flow must traverse between nodes in the DetNet service sub-layer
        (i.e. between a specific Edge Node and the next hop Relay Node,
        between specific Relay Nodes, and between a specific Relay node and
        the egress Edge Node. Resource allocation corresponding to the set
        of Services supported over the forwarding sub-layer, which may or may
        not include aggregation, is required at this sub-layer. Explicit
        routes are used to ensure that packets are routed through the
        resources that have been reserved for them, and hence provide the
        DetNet application with the required service.  Multiple F-Labels
        may be pushed after an S-Label and there is no requirement for all
        F-Labels to be controlled via the same controller mechanisms. For
        example in EVPN, some labels are distributed using BGP while others
        are distributed using LDP or RSVP. 
      </t>
      <t>
        Whether configuring, calculating and instantiating these routes is a
        single-stage or multi-stage process, or in a centralized or
        distributed manner, is out of scope of this document.
      </t>
      <t>
        There are a number of approaches that could be used to provide
        explicit routes and resource allocation in the MPLS layer:
        <list style="symbols">
          <t>
            The path could be explicitly set up by a controller which
            calculates the path and
            explicitly configures each node along that path with the
            appropriate forwarding and resource allocation information.
          </t>
          <t>
            The path could be set up using RSVP-TE signaling.
          </t>
          <t>
            The path could be implemented using
            MPLS-based segment routing when extended to support resource
            allocation.
          </t>
        </list>
        See <xref target="mpls-control-management-requirements"/> for further discussion of these alternatives.
      </t>
      <t>
        Much like other MPLS labels, there are a number of alternatives
        available for DetNet S-Label and F-Label advertisement to an
        upstream peer node. These include distributed signaling
        protocols such as RSVP-TE, centralized label distribution via a
        controller that manages both the sender and the receiver using
        NETCONF/YANG, BGP, PCEP, etc., and hybrid combinations of the
        two.  The details of the controller plane solution required for
        the label distribution and the management of the label number
        space are out of scope of this document, but as mentioned above,
        there are particular DetNet considerations and requirements that
        are discussed in <xref
        target="mpls-control-management-requirements"/>.
      </t>
    </section>
    <section title="Packet Replication, Elimination, and Ordering (PREOF)">
      <t>
        The controller plane protocol solution required for managing the
        PREOF processing is outside the scope of this document. That
        said, it should be noted that the ability to determine, for a
        particular flow, optimal packet replication and elimination
        points in the DetNet domain requires explicit support. There are
        be capabilities that can be used, or extended, for example GMPLS
        end-to-end recovery <xref target="RFC4872"/> and GMPLS segment
        recovery <xref target="RFC4873"/>.
      </t>
    </section>
    <section title="Contention Loss and Jitter Reduction">
      <t>
        As discussed in <xref target="sec_intro"/>, this document does
        not specify the mechanisms needed to eliminate contention loss or
        reduce jitter for DetNet flows at the DetNet forwarding sub-layer.
        The ability to manage node and link resources to be able to
        provide these functions will be a necessary part of the DetNet
        controller plane. It will also be necessary to be able to control
        the required queuing mechanisms used to provide these functions
        along a flow's path through the network. See <xref
        target="mpls-control-management-requirements"/> for further discussion
        of these requirements.
      </t>
    </section>

    <section title="Bidirectional Traffic">
      <t>
        There are still two bidirectional sections that need to be merged.
      </t>
      <t>
        Some DetNet applications generate bidirectional traffic.  Using MPLS
        definitions <xref target="RFC5654"/> there are associated
        bidirectional flows, and co-routed bidirectional flows.  MPLS
        defines a point-to-point associated bidirectional LSP as consisting
        of two unidirectional point-to-point LSPs, one from A to B and the
        other from B to A, which are regarded as providing a single logical
        bidirectional forwarding path.  This would be analogous of standard
        IP routing, or PWs running over two reciprocal unidirection LSPs.
        MPLS defines a point-to-point co-routed bidirectional LSP as an
        associated bidirectional LSP which satisfies the additional
        constraint that its two unidirectional component LSPs follow the
        same path (in terms of both nodes and links) in both directions.  An
        important property of co-routed bidirectional LSPs is that their
        unidirectional component LSPs share fate.  In both types of
        bidirectional LSPs, resource reservations may differ in each
        direction.  The concepts of associated bidirectional flows and
        co-routed bidirectional flows can be applied to DetNet flows.
      </t>
      <t>
        While the MPLS data plane must support bidirectional DetNet flows,
        there are no special bidirectional features with respect to the data
        plane other than the need for the two directions of a co-routed
        bidirectional flow to take the same path.  Fate sharing and
        associated vs co-routed bidirectional flows can be managed at the
        control level.  Note that there is no stated requirement for
        bidirectional DetNet flows to be supported using the same MPLS
        Labels in each direction.
      </t>
      <t>
        DetNet's use of PREOF may increase the complexity of using
        co-routing bidirectional flows, since if PREOF is used, then the
        replication points in one direction would have to match the
        elimination points in the other direction, and vice versa, and the
        optimal points for these functions in one direction may not match
        the optimal points in the other.
      </t>
      <t>
        Control and management mechanisms will need to support bidirectional
        flows, but the specification of such mechanisms are out of scope of
        this document. Related control plan mechanisms have been defined in
        <xref target="RFC3473"/>, <xref target="RFC6387"/> and <xref
        target="RFC7551"/>.
      </t>
      <t>
        This is further discussed in <xref target="mpls-control-management-requirements"/>.
      </t>
    </section>
   
  <section title="Flow Aggregation Control">
      <t>
        XXX <!-- <xref target="FAG"/> --> discusses the use of flow aggregation in
        DetNet. It includes flow aggregation accomplished through the use
        of hierarchical LSPs, aggregating multiple DetNet flows into a
        single new DetNet flow, and simple aggregation at the DetNet
        layer. It will be the responsibility of the DetNet controller
        plane to be able to properly provision the use of these
        mechanisms. These requirements are included in the next section.
      </t>
    </section>
    <section anchor="mpls-control-management-requirements" title="DetNet
                                                             Controller (Control and Management) Plane Requirements">
      <t>
        While the definition of controller plane for DetNet is out of
        the scope of this document, there are particular considerations
        and requirements for such that result from the unique
        characteristics of the DetNet architecture <xref
        target="I-D.ietf-detnet-architecture"/> and data plane as
        defined herein.
      </t>
      <t>
        The primary requirements of the DetNet controller plane are
        that it must be able to:
        <list style="symbols">
          <t>Instantiate DetNet flows in a DetNet domain (which may include
          some or all of explicit path and PREOF replication and
          elimination node determination, link bandwidth reservations, node
          buffer anad other resource reservations, specification of
          required queuing disciplines along the path, ability to manage
          bidirectional flows, etc.) as needed for a flow.</t>
          <t>Manage DetNet S-Label and F-Label allocation and distribution,
          when the DetNet MPLS encapsulation is in use</t>
          <t>The ability to support DetNet flow aggregation</t>
          <t>Advertise static and dynamic node and link resources such as
          capabilities and adjacencies to other network nodes (for dynamic
          signaling approaches) or to network controllers (for centralized
          approaches)</t>
          <t>Scale to handle the number of DetNet flows expected in a
          domain (which may require per-flow signaling or provisioning)</t>
          <t>Provision flow identification information at each of the nodes
          along the path, and it may differ depending on the location in
          the network and the DetNet functionality (e.g. transit node
          vs. relay node).</t>
      </list> </t>
      <t>
        These requirements, as stated earlier, could be satisfied using
        distributed control protocol signaling (such as RSVP-TE),
        centralized network management provisioning mechanisms (such as
        BGP, PCEP, YANG <xref
        target="I-D.ietf-detnet-flow-information-model"/>, etc.) or hybrid
        combinations of the two, and could also make use of MPLS-based
        segment routing.
      </t>
      <t>
        In the abstract, the results of either distributed signaling or
        centralized provisioning are equivalent from a DetNet data plane
        perspective - flows are instantiated, explicit routes are
        determined, resources are reserved, and packets are forwarded
        through the domain using the MPLS data plane.
      </t>
      <t>
        However, from a practical and implementation standpoint, they are
        not equivalent at all. Some approaches are more scalable than
        others in terms of signaling load on the network. Some can take
        advantage of global tracking of resources in the DetNet domain for
        better overall network resource optimization. Some are more
        resilient than others if link, node, or management equipment
        failures occur. While a detailed analysis of the control plane
        alternatives is out of the scope of this document, the requirements
        from this document can be used as the basis of a later analysis of
        the alternatives.
      </t>
    </section>
  </section>
</section>

    <!-- ===================================================================== -->



<section title="Security Considerations">
  <t>
   The security considerations of DetNet in general are discussed in
   <xref target="I-D.ietf-detnet-architecture"/>
   and <xref target="I-D.sdt-detnet-security"/>. Other security
   considerations will be added in a future version of
   this draft.
  </t>
</section>


<section anchor="iana" title="IANA Considerations">
  <t>
   This document makes no IANA requests.
  </t>
</section>

<section anchor="Contributors" title="Contributors">
  <t>
    RFC7322 limits the number of authors listed on the front page of a
    draft to a maximum of 5, far fewer than the many individuals below
    who made important contributions to this draft. The editor wishes to
    thank and acknowledge each of the following authors for contributing
    text to this draft. See also <xref target="acks"/>.
 </t>
 <figure> <artwork><![CDATA[
   Loa Andersson
   Huawei
   Email: loa@pi.nu

   Yuanlong Jiang
   Huawei
   Email: jiangyuanlong@huawei.com

   Norman Finn
   Huawei
   3101 Rio Way
   Spring Valley, CA  91977
   USA
   Email: norman.finn@mail01.huawei.com

   Janos Farkas
   Ericsson
   Magyar Tudosok krt. 11.
   Budapest  1117
   Hungary
   Email: janos.farkas@ericsson.com

   Carlos J. Bernardos
   Universidad Carlos III de Madrid
   Av. Universidad, 30
   Leganes, Madrid  28911
   Spain
   Email: cjbc@it.uc3m.es

   Tal Mizrahi
   Marvell
   6 Hamada st.
   Yokneam
   Israel
   Email: talmi@marvell.com

   Lou Berger
   LabN Consulting, L.L.C.
   Email: lberger@labn.net

   Stewart Bryant
   Huawei Technologies
   Email: stewart.bryant@gmail.com

   Mach Chen
   Huawei Technologies
   Email: mach.chen@huawei.com

   Andrew G. Malis
   Huawei Technologies
   Email: agmalis@gmail.com
   ]]></artwork>
 </figure>

</section>


<section anchor="acks" title="Acknowledgements">
  <t>The author(s) ACK and NACK.
  </t>
  <t> The following people were part of the DetNet Data Plane Solution Design Team:
  <list style="bullets">
   <t>Jouni Korhonen</t>
   <t>J&aacute;nos Farkas</t>
   <t>Norman Finn</t>
   <t>Bal&aacute;zs Varga</t>
   <t>Loa Andersson</t>
   <t>Tal Mizrahi</t>
   <t>David Mozes</t>
   <t>Yuanlong Jiang</t>
   <t>Andrew Malis</t>
   <t>Carlos J. Bernardos</t>
  </list></t>
  <t>
   The DetNet chairs serving during the DetNet Data Plane Solution Design Team:
   <list style="bullets">
    <t>Lou Berger</t>
    <t>Pat Thaler</t>
   </list></t>
</section>
</middle>

<back>
  <references title="Normative References">
   <?rfc include="reference.RFC.3031"?>
   <?rfc include="reference.RFC.3209"?>
   <?rfc include="reference.RFC.3473"?>
   &rfc4385;
  </references>
  <references title="Informative References">
   <?rfc include="reference.RFC.2205"?>
   <?rfc include="reference.RFC.2386"?>
   <?rfc include="reference.RFC.3272"?>
   &rfc3985;
   &rfc4872;
   &rfc4873;
      <?rfc include="reference.RFC.7657"?>
      <?rfc include="reference.RFC.3670"?>
   <?rfc include="reference.RFC.5575"?>
   <?rfc include="reference.RFC.5654"?>
  &rfc6387;
   <?rfc include="reference.RFC.7950"?>
   <?rfc include="reference.RFC.7551"?>
   <?rfc include="reference.RFC.8040"?>
   &I-D.ietf-pce-pcep-extension-for-pce-controller;
&I-D.ietf-detnet-architecture;
&I-D.ietf-detnet-flow-information-model;
   <reference anchor='I-D.ietf-detnet-ip'>
     <front>
       <title>DetNet IP Data Plane Encapsulation
       </title>
       <author>
         <organization>Korhonen, J., Varga, B.</organization>
       </author>
       <date year='2018' />
     </front>
   </reference>
      <reference anchor='I-D.ietf-detnet-ip-over-tsn'>
     <front>
       <title>DetNet Data Plane: IP over IEEE 802.1 Time Sensitive Networking (TSN)
       </title>
       <author>
         <organization>Korhonen, J., Varga, B.</organization>
       </author>
       <date year='2018' />
     </front>
   </reference>

   <reference anchor='I-D.sdt-detnet-security'>
    <front>
     <title>Deterministic Networking (DetNet) Security Considerations,
		draft-sdt-detnet-security, work in progress
     </title>
     <author>
      <organization>Mizrahi, T., Grossman, E., Hacker, A., Das, S.</organization>
     </author>
     <date year='2017' />
    </front>
   </reference>

   <!--reference anchor='IEEE1588'>
     <front>
       <title>IEEE 1588 Standard for a Precision Clock Synchronization
       Protocol for Networked Measurement and Control Systems Version 2
       </title>
       <author>
         <organization>IEEE</organization>
       </author>
       <date year='2008' />
     </front>
   </reference-->

   <reference anchor="IEEE8021Q"
     target="http://standards.ieee.org/about/get/">
    <front>
     <title>Standard for Local and metropolitan area networks-Bridges and Bridged Networks (IEEE Std 802.1Q-2014)</title>
     <author>
      <organization>IEEE 802.1</organization>
     </author>
     <date year="2014"/>
    </front>
    <format type="PDF" target="http://standards.ieee.org/about/get/"/>
   </reference>

   <!--reference anchor="IEEE8021CB"
    target="http://www.ieee802.org/1/files/private/cb-drafts/d2/802-1CB-d2-1.pdf">
    <front>
        <title>Draft Standard for Local and metropolitan area networks - Seamless Redundancy</title>
        <author initials="N. F." surname="Finn" fullname="Norman Finn">
            <organization>IEEE 802.1</organization>
        </author>
        <date month="December" year="2015"/>
    </front>
    <seriesInfo name="IEEE P802.1CB /D2.1" value="P802.1CB"/>
    <format type="PDF" target="http://www.ieee802.org/1/files/private/cb-drafts/d2/802-1CB-d2-1.pdf"/>
   </reference-->

   <!--reference anchor="G.8275.1"
              target="https://www.itu.int/rec/T-REC-G.8275.1/en">
     <front>
       <title>Precision time protocol telecom profile for phase/time synchronization with full timing support from the network</title>
       <author>
         <organization>International Telecommunication Union</organization>
       </author>
       <date month="June" year="2016"/>
     </front>
     <seriesInfo name="ITU-T G.8275.1/Y.1369.1" value="G.8275.1"/>
   </reference-->

   <!--reference anchor="G.8275.2"
              target="https://www.itu.int/rec/T-REC-G.8275.2/en">
     <front>
       <title>Precision time protocol telecom profile for phase/time synchronization with partial timing support from the network</title>
       <author>
         <organization>International Telecommunication Union</organization>
       </author>
       <date month="June" year="2016"/>
     </front>
     <seriesInfo name="ITU-T G.8275.2/Y.1369.2" value="G.8275.2"/>
   </reference-->

  </references>

 </back>
</rfc>
