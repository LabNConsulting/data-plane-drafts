<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc3031 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3031.xml">
<!ENTITY rfc3032 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3032.xml">
<!ENTITY rfc3985 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3985.xml">
<!ENTITY rfc4090 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4090.xml">
<!ENTITY rfc4385 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4385.xml">
<!ENTITY rfc4446 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4446.xml">
<!ENTITY rfc4447 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4447.xml">
<!ENTITY rfc4448 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4448.xml">
<!ENTITY rfc4553 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4553.xml">
<!ENTITY rfc4664 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4664.xml">
<!ENTITY rfc4817 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4817.xml">
<!ENTITY rfc4872 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4872.xml">
<!ENTITY rfc4873 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4873.xml">
<!ENTITY rfc5036 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5036.xml">
<!ENTITY rfc5086 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5086.xml">
<!ENTITY rfc5087 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5087.xml">
<!ENTITY rfc5254 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5254.xml">
<!ENTITY rfc5129 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5129.xml">
<!ENTITY rfc5305 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5305.xml">
<!ENTITY rfc5331 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5331.xml">
<!ENTITY rfc5332 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5332.xml">
<!ENTITY rfc5440 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5440.xml">
<!ENTITY rfc5462 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5462.xml">
<!ENTITY rfc5586 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5586.xml">
<!ENTITY rfc5659 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5659.xml">
<!ENTITY rfc5085 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5085.xml">
<!ENTITY rfc5921 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5921.xml">
<!ENTITY rfc5960 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5960.xml">
<!ENTITY rfc6275 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6275.xml">
<!ENTITY rfc6371 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6371.xml">
<!ENTITY rfc6378 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6378.xml">
<!ENTITY rfc6387 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6387.xml">
<!ENTITY rfc6426 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6426.xml">
<!ENTITY rfc6437 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6437.xml">
<!ENTITY rfc6540 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6540.xml">
<!ENTITY rfc6564 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6564.xml">
<!ENTITY rfc6621 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6621.xml">
<!ENTITY rfc6658 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6658.xml">
<!ENTITY rfc6718 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6718.xml">
<!ENTITY rfc6733 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6733.xml">
<!ENTITY rfc6790 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6790.xml">
<!ENTITY rfc7271 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7271.xml">
<!ENTITY rfc7348 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7348.xml">
<!ENTITY rfc7426 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7426.xml">
<!ENTITY rfc7432 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7432.xml">
<!ENTITY rfc7510 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7510.xml">
<!ENTITY rfc8169 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8169.xml">
<!ENTITY I-D.ietf-pce-pcep-extension-for-pce-controller PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-pce-pcep-extension-for-pce-controller.xml">
<!ENTITY I-D.ietf-spring-segment-routing-mpls PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-spring-segment-routing-mpls">
<!ENTITY I-D.ietf-detnet-problem-statement PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-detnet-problem-statement.xml">
<!ENTITY I-D.ietf-detnet-architecture PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-detnet-architecture.xml">
<!ENTITY I-D.ietf-detnet-flow-information-model PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-detnet-flow-information-model.xml">
<!ENTITY I-D.ietf-mpls-residence-time SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-mpls-residence-time">

]>
<!--
- From 2/25 call:
  o finish discussed split/removal of foo (IP and TSN) over MPLS (Lou) <done>
  After: All to
  o identify missing conformance language, notably WRT forwarding
    sub-layer
  o Aggregation section needs to be cleaned up
  o check conformance language in MPLS over TSN section

  Resolved in Mar 5
  - need for S-Labels to be from platform label space (Andy)
    Pattern after e-vpn where stack is provided by downstream receiver
  - Different S-Labels for same application flow (Balazs)
    clarify that service sub-layer nodes can change s-labels

-->
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std"
     docName="draft-ietf-detnet-mpls-00"
         ipr="trust200902"
         submissionType="IETF">
  <front>
    <title abbrev="DetNet MPLS Data Plane">
     DetNet MPLS Data Plane</title>

  <author role="editor" fullname="Jouni Korhonen" initials="J." surname="Korhonen">
   <!--organization abbrev="Nordic">Nordic Semiconductor</organization-->
   <address>
    <email>jouni.nospam@gmail.com</email>
   </address>
  </author>

  <author role="editor" fullname="Bal&aacute;zs Varga" initials="B." surname="Varga">
	<organization>Ericsson</organization>
	<address>
	 <postal>
	  <street>Magyar Tudosok krt. 11.</street>
	  <city>Budapest</city>
	  <country>Hungary</country>
	  <code>1117</code>
	 </postal>
	 <email>balazs.a.varga@ericsson.com</email>
	</address>
	</author>

  <!--author fullname="Donald Fauntleroy Duck" initials="D. F." surname="Duck">
   <organization abbrev="Royal Bros.">Royal Bros.</organization>
   <address>
    <postal>
     <street>13 Paradise Road</street>
     <city>Duckburg</city>
     <region>Calisota</region>
     <country>USA</country>
    </postal>
   </address>
  </author-->
  <date />
  <workgroup>DetNet</workgroup>

  <abstract>
   <t>
     This document specifies the Deterministic Networking data plane
     when operating over an MPLS Packet Switched Networks.
   </t>
  </abstract>
  </front>

 <middle>
 <section title="Introduction" anchor="sec_intro">
  <t>
    Deterministic Networking (DetNet) is a service that can be offered
    by a network to DetNet flows.  DetNet provides these flows with a
    low packet loss rates and assured maximum end-to-end delivery
    latency.  General background and concepts of DetNet can be found in
    <xref target="I-D.ietf-detnet-architecture"/>.
  </t>
  <t>
    The DetNet Architecture decomposes the DetNet related data plane
    functions into two sub-layers: a service sub-layer and a forwarding
    sub-layer.  The service sub-layer is used to provide DetNet service
    protection and reordering. The forwarding sub-layer is used to
    provides congestion protection (low loss, assured latency, and
    limited reordering) leveraging MPLS Traffic Engineering mechanisms.
  </t>
  <t>
    This document specifies the DetNet data plane operation and the
    on-wire encapsulation of DetNet flows over an MPLS-based Packet
    Switched Network (PSN). The specified encapsulation provides the
    building blocks to enable the DetNet service and forwarding
    sub-layer functions and supports flow identification as described in
    the DetNet Architecture.

    As part of the service sub-layer functions, this document describes
    DetNet node data plane operation. It also describes the function and
    operation of the Packet Replication (PRF) Packet Elimination (PEF)
    and Packet Ordering (POF) functions with an MPLS data plane.

    It also describes an MPLS-based DetNet forwarding sub-layer that
    eliminates (or reduces) contention loss and provides bounded latency
    for DetNet flows.
  </t>
  <t>
    MPLS encapsulated DetNet flows can be carried over different network
    technologies that can provide the DetNet required level of
    service. The definition of how DetNet MPLS is carried over different
    network technologies is out of scope of this document.  Examples of
    such definitions can be found in <xref
    target="I-D.ietf-detnet-mpls-over-udp-ip"/> for DetNet IP networks,
    and <xref target="I-D.ietf-detnet-mpls-over-tsn"/> for IEEE 802.1
    TSN sub-networks.
  </t>
  <t>
    MPLS encapsulated DetNet flows can carry different types of traffic.
    The details of such are also out of scope of this document.  An
    example of such can be found in <xref target="I-D.ietf-detnet-ip"/>,
    IP over DetNet MPLS sub-networks.  This document also allows for,
    but does not define, associated controller plane and Operations,
    Administration, and Maintenance (OAM) functions.
  </t>
  <t>
    Important background information can be found in the DetNet Data
    Plane Framework <xref target="I-D.ietf-detnet-data-plane-framework"/>.
  </t>
 </section>

 <section title="Terminology">
  <section title="Terms Used in This Document">
  <t>
   This document uses the terminology established in the DetNet
   architecture <xref target="I-D.ietf-detnet-architecture"/> and the
   the DetNet Data Plane Framework <xref
   target="I-D.ietf-detnet-data-plane-framework"/>. The reader is
   assumed to be familiar with these documents and any terminology
   defined therein.
  </t>
  <t>
   The following terminology is introduced in this document:
   <list style="hanging" hangIndent="14">
     <t hangText="F-Label">
       A Detnet "forwarding" label that identifies the LSP used to
       forward a DetNet flow across an MPLS PSN, e.g., a hop-by-hop
       label used between label switching routers (LSR).
     </t>

     <t hangText="S-Label">
       A DetNet "service" label that is used between DetNet nodes that
       implement also the DetNet service sub-layer functions. An S-Label
       is also used to identify a DetNet flow at DetNet service
       sub-layer.
     </t>

    <t hangText="d-CW">
      A DetNet Control Word (d-CW) is used for sequencing and
      identifying duplicate packets of a DetNet flow at the DetNet
      service sub-layer.
    </t>
    </list>
   </t>
  </section>

  <section title="Abbreviations">
  <t>
   The following abbreviations are used in this document:
   <list style="hanging" hangIndent="14">
    <t hangText="AC">Attachment Circuit.</t>
    <t hangText="CE">Customer Edge equipment.</t>
    <t hangText="CoS">Class of Service.</t>
    <t hangText="CW">Control Word.</t>
    <t hangText="DetNet">Deterministic Networking.</t>
    <t hangText="DF">DetNet Flow.</t>
    <t hangText="DN-IWF">DetNet Inter-Working Function.</t>
    <t hangText="L2">Layer 2.</t>
    <t hangText="L2VPN">Layer 2 Virtual Private Network.</t>
    <t hangText="L3">Layer 3.</t>
    <t hangText="LSR">Label Switching Router.</t>
    <t hangText="MPLS">Multiprotocol Label Switching.</t>
    <t hangText="MPLS-TE">Multiprotocol Label Switching - Traffic Engineering.</t>
    <t hangText="MPLS-TP">Multiprotocol Label Switching - Transport Profile.</t>
    <t hangText="MS-PW">Multi-Segment PseudoWire (MS-PW).</t>
    <t hangText="NSP">Native Service Processing.</t>
    <t hangText="OAM">Operations, Administration, and Maintenance.</t>
    <t hangText="PE">Provider Edge.</t>
    <t hangText="PEF">Packet Elimination Function.</t>
    <t hangText="PRF">Packet Replication Function.</t>
    <t hangText="PREOF">Packet Replication, Elimination and Ordering Functions.</t>
    <t hangText="POF">Packet Ordering Function.</t>
    <t hangText="PSN">Packet Switched Network.</t>
    <t hangText="PW">PseudoWire.</t>
    <t hangText="QoS">Quality of Service.</t>
    <t hangText="S-PE">Switching Provider Edge.</t>
    <t hangText="T-PE">Terminating Provider Edge.</t>
    <t hangText="TSN">Time-Sensitive Network.</t>
   </list>
  </t>
  </section>
 </section>  <!-- end of terminology -->

 <section title="Requirements Language">
  <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
    "OPTIONAL" in this document are to be interpreted as described in
    BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and
    only when, they appear in all capitals, as shown here.
  </t>
 </section>

 <section title="DetNet MPLS Data Plane Overview" anchor="sec_dt_dp">
  <section title="Layers of DetNet Data Plane" anchor="sec_lay_dt_dp">
  <t>
    This document describes how DetNet flows are carried over MPLS
    networks. The DetNet Architecture, <xref
    target="I-D.ietf-detnet-architecture"/>, decomposes the DetNet data
    plane into two sub-layers: a service sub-layer and a forwarding sub-layer.  The
    basic approach defined in this document supports the DetNet service
    sub-layer based on existing pseudowire (PW) encapsulations and
    mechanisms, and supports the DetNet forwarding sub-layer based on
    existing MPLS Traffic Engineering encapsulations and mechanisms.
    Background on PWs can be found in <xref target="RFC3985"/> and <xref
    target="RFC3031"/>. Background on MPLS Traffic Engineering can be
    found in <xref target="RFC3272"/> and <xref target="RFC3209"/>.
  </t>
  <figure anchor="dn_mpls_dp_approach" align="center"
          title="DetNet Adaptation to MPLS Data Plane">
    <artwork align="center"><![CDATA[
  DetNet        MPLS
    .
    .
+------------+
|  Service   | d-CW, S-Label
+------------+
| Forwarding | F-Label(s)
+------------+
    .
    .
    ]]></artwork>
  </figure>

  <t>
    The DetNet MPLS data plane approach defined in this document is
    shown in <xref target="dn_mpls_dp_approach"/>.  The service sub-layer is
    supported by a DetNet control word (d-CW) which conforms to the
    Generic PW MPLS Control Word (PWMCW) defined in <xref
    target="RFC4385"/>.  A d-CW identifying service label (S-Label) is
    also used.
  </t>

  <t>
    A node operating on a DetNet flow in the Detnet service sub-layer, i.e. a node processing a
    DetNet packet which has the S-Label as top of stack uses the local context
    associated with that S-Label, for example a received F-Label, to
    determine what local DetNet operation(s) are
    applied to that packet. An S-Label may be unique when taken from the platform
    label space <xref target="RFC3031"/>, which would enable correct DetNet flow
    identification regardless of which input interface or LSP the packet arrives on.
  </t>

  <t>
    The DetNet MPLS data plane builds on MPLS Traffic Engineering
    encapsulations and mechanisms to provide a forwarding sub-layer that
    is responsible for providing resource allocation and explicit
    routes.  The forwarding sub-layer is supported by one or more
    forwarding labels (F-Labels).
  </t>
  
  </section>

  <section title="DetNet MPLS Data Plane Scenarios"
           anchor="sec_mpls_dt_dp_scen">


      <figure align="center" anchor="fig_dn_mpls_detnet"
              title="A DetNet MPLS Network">
        <artwork><![CDATA[
DetNet MPLS       Relay       Transit         Relay       DetNet MPLS
End System        Node         Node           Node        End System
   (T-PE)        (S-PE)       (LSR)          (S-PE)         (T-PE)
+----------+                                             +----------+
|   Appl.  |<------------ End to End Service ----------->|   Appl.  |
+----------+   +---------+                 +---------+   +----------+
| Service  |<--| Service |-- DetNet flow --| Service |-->| Service  |
+----------+   +---------+  +----------+   +---------+   +----------+
|Forwarding|   |Fwd| |Fwd|  |Forwarding|   |Fwd| |Fwd|   |Forwarding|
+-------.--+   +-.-+ +-.-+  +----.---.-+   +-.-+ +-.-+   +---.------+
        :  Link  :    /  ,-----.  \   : Link :    /  ,-----.  \
        +........+    +-[  Sub  ]-+   +......+    +-[  Sub  ]-+
                        [Network]                   [Network]
                         `-----'                     `-----'
        |<- LSP -->| |<-------- LSP -----------| |<--- LSP -->|

        |<----------------- DetNet MPLS --------------------->|

        ]]></artwork>
      </figure>
      <t>
        <xref target="fig_dn_mpls_detnet"/> illustrates a hypothetical
        DetNet MPLS-only network composed of DetNet aware MPLS enabled
        end systems, operating over a DetNet aware MPLS network. In this
        figure, relay nodes sit at MPLS LSP boundaries and transit nodes
        are LSRs.
      </t>
      <t>
        DetNet end system and relay nodes are DetNet service sub-layer
        aware, understand the particular needs of DetNet flows and
        provide both DetNet service and forwarding sub-layer functions.
        They add, remove and process d-CWs, S-Labels and F-labels as
        needed.  MPLS enabled end system and relay nodes can enhance the
        reliability of delivery by enabling the replication of packets
        where multiple copies, possibly over multiple paths, are
        forwarded through the DetNet domain.  They can also eliminate
        surplus previously replicated copies of DetNet packets.
        DetNet MPLS nodes provide functionality similar to T-PEs when they
        sit at the edge of an MPLS domain, and functionality similar to
        S-PEs when they are in the middle of an MPLS domain, see <xref
        target="RFC6073"/>.  End system and relay nodes also include
        DetNet forwarding sub-layer functions, support for notably
        explicit routes, and resources allocation to eliminate (or
        reduce) congestion loss and jitter.
      </t>
      <t>
        DetNet transit nodes reside wholly within a DetNet domain, and
        also provide DetNet forwarding sub-layer functions in accordance
        with the performance required by a DetNet flow carried over an
        LSP. Unlike other DetNet node types, transit nodes provide no
        service sub-layer processing.  In a DetNet MPLS network, transit
        nodes may be DetNet service aware or may be DetNet unaware
        MPLS Label Switching Routers (LSRs).  In this latter case, such
        LSRs would be unaware of the special requirements of the DetNet
        service sub-layer, but would still provide traffic engineering
        services and the QoS need to ensure that the (TE) LSPs meet the
        service requirements of the carried DetNet flows.
      </t>

      <t>
        The LSPs may be provided by any MPLS controller method. For
        example they may be provisioned via a management plane, RSVP-TE,
        MPLS-TP, or MPLS Segment Routing (when extended to support
        resource allocation).
      </t>

      <t>
        <xref target="fig_pw_detnet"/> illustrates how an end to end
        MPLS-based DetNet service is provided in a more detail.  In this
        figure, the end systems, CE1 and CE2, are able to send and
        receive MPLS encapsulated DetNet flows, and R1, R2 and R3 are
        relay nodes as they sit in the middle of a DetNet network. The
        'X' in the end systems, and relay nodes represents potential
        DetNet compound flow packet replication and elimination points.
        In this example, service protection is supported over four
        DetNet member flows and TE LSPs. For a unidirectional flow, R1
        supports PRF, R2 supports PREOF and R3 supports PEF and POF.
        Note that the relay nodes may change the underlying forwarding
        sub-layer, for example tunneling MPLS over IEEE 802.1 TSN <xref
        target="mpls-over-tsn"/>, or simply over interconnect network
        links.
      </t>
      <figure align="center" anchor="fig_pw_detnet"
              title="MPLS-Based Native DetNet">
        <artwork><![CDATA[
        DetNet                                           DetNet
        MPLS  Service          Transit          Transit       Service MPLS
        DetNet  |             |<-Tnl->|        |<-Tnl->|            | DetNet
        End     |             V   1   V        V   2   V            | End
        System  |    +--------+       +--------+       +--------+   | System
        +---+   |    |   R1   |=======|   R2   |=======|   R3   |   |  +---+
        |  X...DFa...|._X_....|..DF1..|.__ ___.|..DF3..|...._X_.|.DFa..|.X |
        |CE1|========|    \   |       |   X    |       |   /    |======|CE2|
        |   |   |    |     \_.|..DF2..|._/ \__.|..DF4..|._/     |   |  |   |
        +---+        |        |=======|        |=======|        |      +---+
        ^        +--------+       +--------+       +--------+      ^
        |        Relay Node       Relay Node       Relay Node      |
        |          (S-PE)           (S-PE)           (S-PE)        |
        |                                                          |
        |<---------------------- DetNet MPLS --------------------->|
        |                                                          |
        |<--------------- End to End DetNet Service -------------->|

        -------------------------- Data Flow ------------------------->

        X   = Optional service protection (none, PRF, PREOF, PEF/POF)
        DFx = DetNet member flow x over a TE LSP
        ]]></artwork>
      </figure>

      <t>
        As previously mentioned, this document specifies how MPLS is used
        to support DetNet flows using an MPLS data plane.  Additional
        scenarios can be found in <xref
        target="I-D.ietf-detnet-data-plane-framework"/>.
      </t>
    </section>

    <section title="Packet Flow Example with Service Protection">

      <t>
        An example DetNet MPLS network fragment and packet flow is
        illustrated in <xref target="fig_mpls_example"/>.
      </t>

      <figure align="center" anchor="fig_mpls_example"
              title="Example Packet Flow in DetNet Enabled MPLS Network">
        <artwork><![CDATA[
   1      1.1       1.1      1.2.1    1.2.1      1.2.2
CE1----EN1--------R1-------R2-------R3--------EN2-----CE2
         \           1.2.1 /                   /
          \1.2     /-----+                   /
           +------R4------------------------+
                     1.2.2
                     ]]></artwork>
      </figure>

      <t>
        In <xref target="fig_mpls_example"/> the numbers are used
        to identify the instance of a packet. Packet 1 is the original packet,
        and packets 1.1, and 1.2 are two first generation copies of packet 1.
        Packet 1.2.1 is a second generation copy of packet 1.2 etc.
        Note that these numbers never appear in the packet, and are not
        to be confused with sequence numbers, labels or any other
        identifier that appears in the packet. They simply indicate the
        generation number of the original packet so that its passage
        through the network fragment can be identified to the reader.
      </t>
      <t>
        Customer Equipment CE1 sends a packet into the DetNet enabled MPLS
        network. This is packet (1).  Edge Node EN1 encapsulates the
        packet as a DetNet Packet and sends it to Relay node R1 (packet 1.1).
        EN1 makes a copy of the packet (1.2), encapsulates it and
        sends this copy to Relay node R4.
      </t>
      <t>
        Note that along the MPLS path from EN1 to R1 there may be
        zero or more LSRs which, for clarity, are not shown. The same is true
        for any other path between two DetNet entities shown in
        <xref target="fig_mpls_example"/>.
      </t>
      <t>
        Relay node R4 has been configured to send one copy of the packet to
        Relay Node R2 (packet 1.2.1) and one copy to Edge Node EN2
        (packet 1.2.2).
      </t>
      <t>
        R2 receives packet copy 1.2.1 before packet copy 1.1 arrives, and, having
        been configured to perform packet elimination on this DetNet flow,
        forwards packet 1.2.1 to Relay Node R3.
        Packet copy 1.1 is of no further use and so is discarded by R2.
      </t>
      <t>
        Edge Node EN2 receives packet copy 1.2.2 from R4 before it receives
        packet copy 1.2.1 from R2 via relay Node R3. EN2 therefore strips
        any DetNet encapsulation from packet copy 1.2.2 and forwards the
        packet to CE2. When EN2 receives the later packet copy 1.2.1 this
        is discarded.
      </t>
      <t>
        The above is of course illustrative of many network scenarios that
        can be configured.  Between a pair of relay nodes there may be one or
        more transit nodes that simply forward the DetNet traffic, but
        these are omitted for clarity.
      </t>
    </section>
  </section>  <!-- end of data plane overview -->

<!-- ================================================================= -->
<!-- =================== General Encap considerations ================ -->
<!-- ================================================================= -->

<section title="DetNet MPLS Data Plane Considerations" anchor="dn-gen-encap-solution">
  <t>
    This section provides informative considerations related to
    providing DetNet service to flows which are identified
    based on their header information. At a high level, the
    following are provided on a per flow basis:
    <list style="hanging">
      <t hangText="Eliminating contention loss and jitter reduction:">
        <vspace blankLines="1"/>
        Use of allocated resources (queuing, policing, shaping) to ensure
        that the congestion-related loss and latency/jitter requirements of
        a DetNet flow are met.
      </t>
      <t hangText="Explicit routes:">
        <vspace blankLines="1"/>
        Use of a specific path for a flow.  This limits
        misordering and bounds latency.
      </t>

      <t hangText="Service protection:">
        <vspace blankLines="1"/>
        Which in the case of this document primarily relates to
        replication and elimination. Changing the explicit path after a
        failure is detected in order to restore delivery of the required
        DetNet service characteristics is also possible. Path changes,
        even in the case of failure recovery, can lead to the out of
        order delivery of data.
      </t>
      <t hangText="Load sharing:">
        <vspace blankLines="1"/>
        Generally, distributing packets of the same DetNet flow over
        multiple paths is not recommended. Such load sharing,
        e.g., via ECMP or UCMP, impacts ordering and possibly jitter.
      </t>
      <t hangText="Troubleshooting:"> <vspace blankLines="1"/>
      For example, to support identification of misbehaving flows.
      </t>
      <t hangText="Recognize flow(s) for analytics:"><vspace blankLines="1"/>
      For example, increase counters.
      </t>
      <t hangText="Correlate events with flows:"><vspace blankLines="1"/>
      For example, unexpected loss.
      </t>
    </list>
  </t>

  <t>
    The DetNet data plane also allows for the aggregation of DetNet
    flows, e.g., via MPLS hierarchical LSPs, to improved scaling.  When
    DetNet flows are aggregated, transit nodes provide service to the
    aggregate and not on a per-DetNet flow basis.  In this case, nodes
    performing aggregation will ensure that per-flow service
    requirements are achieved.
  </t>

  <section title="End-System Specific Considerations">
    <t>
      Data-flows requiring DetNet service are generated and terminated
      on end-systems. Encapsulation depends on application and its
      preferences. In a DetNet MPLS domain the DN functions use the
      d-CWs, S-Labels and F-Labels to provide DetNet services. However,
      an application may exchange further flow related parameters (e.g.,
      time-stamp), which are not provided by DN functions.
    </t>

    <t>
      Specifics related to non-MPLS DetNet end station behavior are out
      side the scope of this document.  For example, details on support
      for DetNet IP data flows can be found in <xref
      target="I-D.ietf-detnet-ip"/>. This document is also useful
      for end stations that map IP flows to DetNet flows.
    </t>
    <t>
      As a general rule, DetNet MPLS domains are capable of forwarding
      any DetNet MPLS flows and the DetNet domain does not mandate the
      end-system or edge system encapsulation format. Unless there is a
      proxy of some form present, end-systems peer with similar
      end-systems using the same application encapsulation format.  For
      example, as shown in <xref target="fig_es_connect"/>, IP
      applications peer with IP applications and Ethernet L2VPN
      applications peer with Ethernet L2VPN applications.
    </t>

    <figure title="End-Systems and The DetNet MPLS Domain" anchor="fig_es_connect">
      <artwork align="center"><![CDATA[
+-----+
|  X  |                               +-----+
+-----+                               |  X  |
| Eth |               ________        +-----+
+-----+     _____    /        \       | Eth |
       \   /     \__/          \___   +-----+
        \ /                        \ /
         0======== tunnel-1 ========0_
         |                             \
          \                             |
          0========= tunnel-2 =========0
         / \                        __/ \
  +-----+   \__ DetNet MPLS domain /     \
  |  X  |      \         __       /       +-----+
  +-----+       \_______/  \_____/        |  X  |
  |  IP |                                 +-----+
  +-----+                                 |  IP |
                                          +-----+
                                          ]]>
    </artwork></figure>

  </section>
  <section title="Sub-Network Considerations">
    <t>
      As shown in <xref target="fig_dn_mpls_detnet"/>, MPLS nodes are
      interconnected by different sub-network technologies, which may
      include point-to-point links. Each of these need to provide
      appropriate service to DetNet flows.  In some cases, e.g., on
      dedicated point-to-point links or TDM technologies, all that is
      required is for a DetNet node to appropriately queue its output
      traffic.  In other cases, DetNet nodes will need to map DetNet
      flows to the flow semantics (i.e., identifiers) and mechanisms used
      by an underlying sub-network technology.  <xref
      target="fig_dn_mpls_sn_ex"/> shows several examples of header
      formats that can be used to carry DetNet MPLS flows over different
      sub-network technologies.  L2 represent a generic layer-2
      encapsulation that might be used on a point-to-point link.  TSN
      represents the encapsulation used on an IEEE 802.1 TSN network, as
      described in <xref target="mpls-over-tsn"/>.  UDP/IP represents the
      encapsulation used on a DetNet IP PSN, as described in <xref
      target="mpls-over-ip"/> .     
    </t>
    

    <figure title="Example DetNet MPLS Sub-Network Formats" anchor="fig_dn_mpls_sn_ex">
      <artwork align="center"><![CDATA[

                   +------+  +------+  +------+
App-Flow           |  X   |  |  X   |  |  X   |
             +-----+======+--+======+--+======+-----+
DetNet-MPLS        | d-CW |  | d-CW |  | d-CW |
                   +------+  +------+  +------+
                   |Labels|  |Labels|  |Labels|
             +-----+======+--+======+--+======+-----+
Sub-Network        |  L2  |  | TSN  |  | UDP  |
                   +------+  +------+  +------+
                                       |  IP  |
                                       +------+
                                       |  L2  |
                                       +------+
    ]]>
  </artwork></figure>
 </section>
</section>

<!-- ================================================================= -->

<section title="MPLS-Based DetNet Data Plane Solution" anchor="dn-dt-solution">

 <section title="DetNet Over MPLS Encapsulation Components" anchor="dn-MPLS-en-comps">
  <t>
   To carry DetNet over MPLS the following is required:

  <list style="numbers">
   <t>A method of identifying the MPLS payload type.</t>
   <t>A method of identifying the DetNet flow group to the processing element.</t>
   <t>A method of distinguishing DetNet OAM packets from DetNet data packets.</t>
   <t>A method of carrying the DetNet sequence number.</t>
   <t>A suitable LSP to deliver the packet to the egress PE.</t>
   <t>A method of carrying queuing and forwarding indication.</t>
  </list>
  </t>
  <t>
   In this design an MPLS service label (the S-Label), similar to a
   pseudowire (PW) label <xref target="RFC3985"/>, is used to identify
   both the DetNet flow identity and the payload MPLS payload type
   satisfying (1) and (2) in the list above.  OAM traffic discrimination
   happens through the use of the Associated Channel method described in
   <xref target="RFC4385"/>.  The DetNet sequence number is carried in
   the DetNet Control word which carries the Data/OAM discriminator.  To
   simplify implementation and to maximize interoperability two sequence
   number sizes are supported: a 16 bit sequence number and a 28 bit
   sequence number.  The 16 bit sequence number is needed to support
   some types of legacy clients. The 28 bit sequence number is used in
   situations where it is necessary ensure that in high speed networks
   the sequence number space does not wrap whilst packets are in flight.
  </t>
  <t>
   The LSP used to forward the DetNet packet may be of any type
   (MPLS-LDP, MPLS-TE, MPLS-TP <xref target="RFC5921"/>, or MPLS-SR
   <xref target="I-D.ietf-spring-segment-routing-mpls"/>).  The LSP
   (F-Label) label and/or the S-Label may be used to indicate the queue
   processing as well as the forwarding parameters.  Note that the
   possible use of Penultimate Hop Popping (PHP) means that the only
   label in a received label stack may be the S-Label.
  </t>
 </section>

  <section title="MPLS Data Plane Encapsulation" anchor="pwSolution">
   <t>
    <xref target="fig_pw_mpls"/> illustrates a DetNet data plane MPLS
    encapsulation.  The MPLS-based encapsulation of the DetNet flows is
    a good fit for the scenarios described in <xref
    target="sec_ip_mpls_dt_dp_scen"/> and <xref
    target="sec_tsn_mpls_dt_dp_scen"/>.  Furthermore, end to end DetNet
    service i.e., native DetNet deployment (see <xref
    target="sec_mpls_dt_dp_scen"/>) is also possible if DetNet end
    systems are capable of initiating and termination MPLS encapsulated
    packets.
   </t>
   <t>
    The MPLS-based DetNet data plane encapsulation consists of:
    <list style="symbols">
     <t>
      DetNet control word (d-CW) containing sequencing information for packet replication and
      duplicate elimination purposes, and the OAM indicator.</t>
     <t>
      DetNet service Label (S-Label) that identifies a DetNet flow at
      the receiving DetNet service sub-layer processing node.
     </t>
     <t>
      Zero or more Detnet MPLS  Forwarding label(s) (F-Label) used to direct the packet along the label
      switched path (LSP) to the next service sub-layer processing node along the path.  When Penultimate Hop Popping is in
      use there may be no label F-Label in the protocol stack on the final hop.
     </t>
     <t>
      The necessary data-link encapsulation is then applied prior to transmission over the physical
      media.
     </t>
    </list>
   </t>

  <figure title="Encapsulation of a DetNet App-Flow in an MPLS(-TP) PSN" anchor="fig_pw_mpls">
  <artwork align="center"><![CDATA[
  DetNet MPLS-based encapsulation

+---------------------------------+
|                                 |
|         DetNet App-Flow         |
|         Payload  Packet         |
|                                 |
+---------------------------------+ <--\
|       DetNet Control Word       |    |
+---------------------------------+    +--> DetNet data plane
|           S-Label               |    |    MPLS encapsulation
+---------------------------------+    |
|           F-Label(s)            |    |
+---------------------------------+ <--/
|           Data-Link             |
+---------------------------------+
|           Physical              |
+---------------------------------+
]]>
    </artwork></figure>

  <section title="DetNet Control Word and the DetNet Sequence Number"
           anchor="dn-sn">
  <t>
   A DetNet control word (d-CW) conforms to the Generic PW MPLS Control
   Word (PWMCW) defined in <xref target="RFC4385"/>. The d-CW formatted
   as shown in <xref target="fig_detnet_cw"/> MUST be present in all
   DetNet packets containing app-flow data.
  </t>
    <figure title="DetNet Control Word" anchor="fig_detnet_cw">
    <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0 0 0 0|                Sequence Number                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]>
    </artwork></figure>

  <t>
    <list style="hanging">
      <t hangText="(bits 0 to 3)">
        <vspace blankLines="1"/>
        Per <xref target="RFC4385"/>, MUST be set to zero (0).
      </t>
      <t hangText="Sequence Number (bits 4 to 31)">
        <vspace blankLines="1"/>
        An unsigned value implementing the DetNet sequence number.
      </t>
    </list>
  </t>
  <t>
   A separate sequence number space MUST be maintained by the 
   the node that adds the d-CW for each DetNet app-flow.
   The following sequence number field lengths MUST be supported:
   <list style="bullets">
     <t>0 bits</t>
     <t>16 bits</t>
     <t>28 bits</t>
   </list>
   The sequence number length MUST be provisioned (configured) on a per
   app-flow basis via
   configuration, e.g., the controller plane described in <xref
   target="cp_considerations"/>.
  </t>
  <t>
    A 0 bit sequence number field length indicates that there is no
    DetNet sequence number used for the flow.  When the length is zero,
    the sequence number field MUST be set to zero (0) on all packets
    sent for the flow.
  </t>

  <t>
    When the sequence number field length is 16 or 28 bits for a flow,
    the sequence number MUST be incremented by one for each new app-flow
    packet sent. When the field length is 16 bits, d-CW bits 4 to 15
    MUST be set to zero (0). This values carried in this field can wrap
    and it is important to note that zero (0) is a valid field value.
    For example, were the sequence number size is 16 bits, the sequence
    will contain: 65535, 0, 1. In this case, zero (0) is an ordinary
    sequence number. This differs from <xref target="RFC4448"/> where a
    sequence number of zero (0) does not indicate that no sequence
    number field value is in use.
  </t>
  <t>
    The sequence number is optionally used during receive processing as
    described below in <xref target="pef-requirements"/> and <xref
    target="pof-requirements"/>.
  </t>
  </section>
  <section anchor="flow-identification" title="S-Labels">
   <t>
    App-flow identification at a DetNet service sub-layer is realized by
    an S-Label.  Each app-flow MUST be sent by the node that adds a d-CW
    with a single specific S-Label value.  MPLS-aware DetNet end systems
    and edge nodes, which are by definition MPLS ingress and egress
    nodes, MUST add and remove the d-CW and S-Label.  Relay nodes MAY
    swap S-Label values when processing an app-flow.
   </t>
   <t>
    The S-Label value MUST be provisioned per app-flow via
    configuration, e.g., via
    the controller plane described in <xref target="cp_considerations"/>.
    Note that S-Labels provide app-flow identification at the downstream
    DetNet service sub-layer receiver, not the sender.  As such,
    S-Labels MUST be allocated by the entity that controls the service
    sub-layer receiving node's label space, and MAY be allocated from
    the platform label space <xref target="RFC3031"/>.
   </t>
   <t>
   The S-Label will normally be at the bottom of the label stack, immediately preceding the d-CW.
   To support service sub-layer level OAM, an OAM Associated Channel Header (ACH) <xref target="RFC4385"/>
   together with a Generic Associated Channel Label (GAL) <xref
   target="RFC5586"/> MAY be used in place of a d-CW.
   </t>
   <t>
   Similarly, an Entropy Label Indicator/Entropy Label (ELI/EL)
   <xref target="RFC6790"/> MAY be carried below the S-Label in the
   label stack in networks where DetNet flows would otherwise received ECMP treatment.
   When ELs are used, the same EL value SHOULD be used for
   all of the packets sent using a specific S-Label to force the flow to follow the
   same path.   However, as previously stated in <xref
   target="dn-gen-encap-solution"/>, the use of ECMP for DetNet flows is
   NOT RECOMMENDED. ECMP MAY be used for non-DetNet flows within a
   DetNet domain.
   </t>
   <t>
     When receiving a DetNet MPLS flow, an implementation MUST identify
     the app-flow associated with the incoming packet based on the
     S-Label.  When a node is using platform labels for S-Labels, no
     additional information is needed as the S-label uniquely identifies
     the app-flow.  In the case where platform labels are not used, one
     or more F-Labels proceeding the S-Label MUST be used together with
     the S-Label to uniquely identify the incoming app-flows. When PHP
     is used, the incoming interface MAY also be used to together with
     any present F-Label(s) and the S-Label to uniquely identify an
     incoming app-flows.  Note that choice to use platform label space
     for S-Label or S-Label plus one or more F-Labels to identify app
     flows is a local implementation choice, with one caveat.  When one
     or more F-labels, or incoming interface, is needed together with an
     S-Label to uniquely identify, the controller plane MUST ensure that
     incoming DetNet MPLS packets arrive with the needed information
     (F-label(s) and/or incoming interface); the details of such are
     outside the scope of this document.
   </t>
   <t>
     While NOT REQUIRED, the use of platform labels for S-Labels matches
     other pseudowire encapsulations.  This implementation choice also
     impacts PEF and POF processing as described in the next section.
   </t>
   <section anchor="pef-requirements" title="Packet Elimination Function
                                             Processing">
     <t>
       Implementations MAY support the Packet Elimination Function (PEF)
       for received DetNet MPLS flows.  When supported, use of the PEF
       for a particular app-flow MUST be provisioned via configuration,
       e.g., via the controller plane described in <xref target="cp_considerations"/>.
     </t>
     <t>
       After an app-flow is identified for a received DetNet MPLS
       packet, as described above, an implementation MUST check if PEF
       is configured for that app-flow.  When configured the
       implementation MUST track the sequence number contained in
       received d-CWs and MUST ensure that duplicate (replicated)
       instances of a particular sequence number are discarded.  The
       specific mechanisms used for an implementation to identify which
       received packets are duplicates and which are new is an
       implementation choice.  Note that per <xref target="dn-sn"/>
       the sequence number field length may be 16 or 28 bits, and the
       field value can wrap.
     </t>
     <t>
       Note that an implementation MAY wish to constrain the maximum
       number sequence numbers that are tracked, on platform-wide or per
       flow basis.  Some implementations MAY support the provisioning of
       the maximum number sequence numbers that are tracked number on
       either a platform-wide or per flow basis.
     </t>
   </section>
   <section anchor="pof-requirements" title="Packet Ordering Function
                                             Processing">
     <t>
       A function that is related to PEF is the Packet Ordering Function
       (POF).  Implementations MAY support POF. When
       supported, use of the POF for a particular app-flow MUST be
       provisioned via configuration, e.g., via the controller plane
       described by <xref
       target="cp_considerations"/>.  Implementations MAY required that
       PEF and POF be used in combination.  There is no requirement
       related to the order of execution of the Packet Elimination and
       Ordering Functions in an implementation.
     </t>
     <t>
       After an app-flow is identified for a received DetNet MPLS
       packet, as described above, an implementation MUST check if POF
       is configured for that app-flow.  When configured the
       implementation MUST track the sequence number contained in
       received d-CWs and MUST ensure that packets are processed in the
       order indicated in the received d-CW sequence number field, which
       may not be in the order the packets are received. As defined in
       <xref target="dn-sn"/> the sequence number field length may be 16
       or 28 bits, is incremened by one (1) for each new app-flow packet
       sent, and the field value can wrap.  The specific mechanisms used
       for an implementation to identify the order of received packets
       is an implementation choice.
     </t>
     <t>
       Note that an implementation MAY wish to constrain the maximum
       number of out of order packets that can be processed, on
       platform-wide or per flow basis.  Some implementations MAY
       support the provisioning of this number on either a platform-wide
       or per flow basis.  The number of out of order packets that can
       be processed also impacts the latency of a flow.
     </t>
   </section>
  </section>
  <section anchor="f-labels" title="F-Labels">
     <t>
       F-Labels are support the DetNet forwarding sub-layer. F-Labels
       are used to provide LSP-based connectivity between DetNet service
       sub-layer processing nodes.
     </t>
     <section anchor="f-labels-ssl"
              title="Service Sub-Layer and Packet Replication Function Processing">
       
       <t>
         DetNet MPLS end systems, edge nodes and relay nodes may operate
         at the DetNet service sub-layer with understand of app-flows
         and their requirements. As mentioned above, when operating at
         this layer such nodes can push, pop or swap (pop then push)
         S-Labels. In all cases, the F-Labels used for the app-flow are
         always replaced and this section applies. 
       </t>
       <t>
         When sending a DetNet flow, Zero or more F-Labels MAY be added
         on top of an S-Label by the node pushing an S-Label. The
         F-Labels to be pushed when sending a particular app-flow MUST
         be provisioned per app-flow via configuration, e.g., via the
         controller plane discussed in <xref target="cp_considerations"/>.  To
         allow for the omission of F-Labels, an implementation SHOULD
         also allow an outgoing interface to be provisioned.
     </t>
     <t>
       The Packet Replication Function (PRF) function MAY be supported
       by an implementation for outgoing DetNet flows. When supported,
       the same app-flow data will be sent over multiple outgoing
       forwarding sub-layer LSPs.  To support PRF an implementation MUST
       support the setting of different sets of F-Labels.  Hereto, to
       allow for the omission of F-Labels, an implementation SHOULD also
       allow multiple outgoing interfaces to be provisioned. PRF MUST
       NOT be used with app-flows configured with a d-CW sequence number
       field length of 0 bits.
     </t>
     <t>
       When a single set of F-Labels is provisioned for a particular
       outgoing app-flow, that set of F-labels MUST be pushed after the
       S-Label is pushed.  The outgoing packet is then forwarded as
       described below in <xref target="f-labels-all"/>. When a single
       outgoing interface is provisioned, the outgoing packet is then
       forwarded as described below in <xref target="f-labels-all"/>.
     </t>
     <t>
       When multiple sets of F-Labels or interfaces are provisioned for
       a particular outgoing app-flow, a copy of the outgoing packet, including
       the pushed S-Label, MUST be made per F-label set and outgoing
       interface. Each set of provisioned F-Labels are then pushed onto
       a copy of the packet.  Each copy is then forwarded as described
       below in <xref target="f-labels-all"/>.
     </t>
     <t>
       As described in the previous section, when receiving a DetNet MPLS flow, an implementation
       identifies the app-flow associated with the incoming packet based
       on the S-Label.  When a node is using platform labels for
       S-Labels, any F-Labels can be popped and the S-label uniquely
       identifies the app-flow.  In the case where platform labels are
       not used, F-Label(s) MUST also be provisioned for incoming
       app-flows. When PHP is used, incoming interface MUST be
       provisioned.  The provisioned information MUST then be used to
       identify incoming app-flows based on the combination of S-Label
       and F-Label(s) or incoming interface.
     </t>
     </section>
     <section anchor="f-labels-all"
              title="Common F-Label Processing">
       <t>
         All DetNet aware MPLS nodes process F-Labels as needed to meet
         the service requirements of the DetNet flow or flows carried in
         the LSPs represented by the F-Labels.  This includes normal
         push, pop and swap operations.  Such processing is essentially
         the same type of processing enabled for TE LSPs, although the
         specific service parameters, or traffic specification, can
         differ.  When the DetNet service parameters of the app-flow or
         flows carried in an LSP represented by an F-Label can be met by
         an exiting TE mechanism, the forwarding sub-layer processing
         node MAY be a DetNet unaware, i.e., standard, MPLS LSR.  Such
         TE LSPs may provide LSP forwarding service as defined in, but
         not limited to, <xref target="RFC3209"/>, <xref
         target="RFC3270"/>, <xref target="RFC3272"/>, <xref
         target="RFC3473"/>, <xref target="RFC4875"/>, <xref
         target="RFC5440"/>, and <xref target="RFC6006"/>.
       </t>
       <t>
         More specifically, as mentioned above, the DetNet forwarding
         sub-layer provides explicit routes and allocated resources, and
         F-Labels are used to map to each.  Explicit routes are
         supported based on the topmost (outermost) F-Label that is
         pushed or swapped and the LSP that corresponds to this label.
         This topmost (outgoing) label MUST be associated with a
         provisioned outgoing interface and, for non-point-to-point
         outgoing interfaces, a next hop LSR.  Note that this
         information MUST be provisioned via configuration or the
         controller plane.  In the previously mentioned special case
         where there is no added F-labels and the outgoing interface is
         not a point-to-point interface, the outgoing interface MUST
         also be associated with a next hop LSR.
       </t>
       <t>
         Resources may be allocated in a hierarchical fashion per LSP
         that is represented by each F-Label. Each LSP MAY be
         provisioned with a service parameters that dictates the
         specific traffic treatment to be received by the traffic
         carried over that LSP.  Implementations of this document MUST
         ensure that traffic carried over each LSP represented by an
         F-Label receives the traffic treatment provisioned for that
         LSP.  Typical mechanisms used to provide different treatment to
         different flows includes the allocation of system resources
         (such as queues and buffers) and provisioning or related
         parameters (such as shaping, and policing). Support can also be
         provided via an underlying network technology such IEEE802.1
         TSN <xref target="mpls-over-tsn"/>. Other than in the TSN case,
         the specific mechanisms used by a DetNet node to ensure DetNet
         service delivery requirements are met for supported DetNet
         flows is outside the scope of this document.
       </t>
       <t>
         Packets that are marked in a way that does not correspond to
         allocated resources, e.g., lack a provisioned F-Label, can
         disrupt the QoS offered to properly reserved DetNet flows by
         using resources allocated to the reserved flows.  Therefore,
         the network nodes of a DetNet network:
         <list style="symbols">
           <t>
             MUST defend the DetNet QoS by discarding or remarking (to
             an allocated DetNet flow or non-competing non-DetNet flow)
             packets received that are not the subject of a completed
             resource allocation.
           </t>
           <t>
             MUST NOT use a DetNet allocated resource, e.g. a queue or
             shaper reserved for DetNet flows, for any packet that does
             match the corresponding DetNet flow.
           </t>
           <t>
             MUST ensure a QoS flow does not exceed its allocated
             resources or provisioned service level,
           </t>
           <t>
             MUST ensure a CoS flow or service class does not impact the
             service delivered to other flows.  This requirement is
             similar to requirement for MPLS LSRs to that CoS LSPs do
             not impact the resources allocated to TE LSPs, e.g., via
             <xref target="RFC3473"/>.
           </t>
         </list>
       </t>
       <t>
         Subsequent sections provide additional considerations related
         to CoS (<xref target="CoS"/>), QoS (<xref target="QoS"/>) and
         aggregation (<xref target="Aggregation"/>).
       </t>
     </section>
   </section>

   </section>

   <section anchor="oam-indication" title="OAM Indication">
     <!-- LB: why only type 1, if keep it, need conformance language -->
   <t>
    OAM follows the procedures set out in <xref target="RFC5085"/> with the
    restriction that only Virtual Circuit Connectivity Verification
    (VCCV) type 1 is supported.</t>

   <t>As shown in Figure 3 of <xref target="RFC5085"/> when the first nibble of
    the d-CW is 0x0 the payload following the d-CW is normal user
    data. However, when the first nibble of the d-CW is 0X1, the
    payload that follows the d-DW is an OAM payload with the OAM
    type indicated by the value in the d-CW Channel Type field.</t>

   <t>The reader is referred to <xref target="RFC5085"/> for a more detailed
    description of the Associated Channel mechanism, and to the
    DetNet work on OAM for more information DetNet OAM.
   </t>
  </section>

  <section anchor="FAG" title="Flow Aggregation">
    <t>
      [Author's note: need to revisit this section and ensure that we
      cover (and fully specify) desired types of aggregation.]
    </t>
   <t>
    <list style="numbers">
     <t>Aggregate at the LSP (Forwarding)</t>
     <t>Aggregating DetNet flows as a new DetNet flow</t>
     <t>Simple Aggregation at the DetNet layer</t>
    </list>
   </t>
   <t>
    The resource control and
    management aspects of aggregation (including the queuing/shaping/
    policing implications) will be covered in other documents.
   </t>
   <t>
    The ability to aggregate individual flows, and their associated
    resource control, into a larger aggregate is an important technique
    for improving scaling of control in the data, management and control
    planes.  The DetNet data plane allows for the aggregation of DetNet flows,
    to improved scaling. There are three methods of introducing flow aggregation:
   </t>
   <section anchor="aggregation-at-the-lsp" title="Aggregation at the LSP">
    <t>
     DetNet flows forwarded via MPLS can leverage MPLS-TE's existing
     support for hierarchical LSPs (H-LSPs), see <xref target="RFC4206"/>.  H-LSPs are
     typically used to aggregate control and resources, they may also be
     used to provide OAM or protection for the aggregated LSPs.  Arbitrary
     levels of aggregation naturally falls out of the definition for
     hierarchy and the MPLS label stack <xref target="RFC3032"/>.  DetNet nodes which
     support aggregation (LSP hierarchy) map one or more LSPs (labels)
     into and from an H-LSP.  Both carried LSPs and H-LSPs may or may not
     use the TC field, i.e., L-LSPs or E-LSPs.  Such nodes will need to
     ensure that traffic from aggregated LSPs are placed (shaped/policed/
     enqueued) onto the H-LSPs in a fashion that ensures the required
     DetNet service is preserved.
    </t>
    <t>
     Additional details of the traffic
     control capabilities needed at a DetNet-aware node may be covered in
     the new service descriptions mentioned above or in separate future
     documents.  Controller plane mechanisms will also need to
     ensure that the service required on the aggregate flow (H-LSP or
     DSCP) are provided, which may include the discarding or remarking
     mentioned in the previous sections.
    </t>
    </section>
    <section anchor="aggregating-detnet-flows-as-a-new-detnet-flow" title="Aggregating DetNet Flows as a new DetNet flow">
    <t>
     An aggregate can be built by layering DetNet flows as shown below:
    </t>

<figure><artwork><![CDATA[
+---------------------------------+
|                                 |
|           DetNet Flow           |
|         Payload  Packet         |
|                                 |
+---------------------------------+ <--\
|       DetNet Control Word       |    |
+=================================+    |
|            S-Label              |    |
+---------------------------------+    +----DetNet data plane
|       DetNet Control Word       |    |    MPLS encapsulation
+=================================+    |
|            A-Label              |    |
+---------------------------------+    |
|           F-Label(s)            | <--/
+---------------------------------+
|           Data-Link             |
+---------------------------------+
|           Physical              |
+---------------------------------+
]]></artwork></figure>

    <t>
     Both the Aggregation (A) label and the S-Label have their MPLS S bit
     set indicating bottom of stack, and the d-CW allows the PREOF
     to work.
    </t>
    <t>
     It is a property of the A-label that what follows is d-CW followed
     by an S-Label. A relay node processing the A-label would not know
     the underlying payload type. This would only be known to a node
     that was a peer of the node imposing the S-Label. However there is
     no real need for it to know the payload type during aggregation
     processing.
    </t>
   </section>

   <section anchor="simple-aggregation-at-the-detnet-layer" title="Simple Aggregation at the DetNet Layer">
    <t>
    Another approach would be not to include a d-CW for the aggregated
    flow.  This would be functionally similar to aggregation at the
    forwarding sub-layer using H-LSPs, but would confine knowledge of
    the aggregation to the DetNet layer. Such an approach shares the
    disadvantage that PREOF operations would not be possible. OAM
    operation in this mode is for further study.
   </t>

   <figure><artwork><![CDATA[
 +---------------------------------+
 |                                 |
 |           DetNet Flow           |
 |         Payload  Packet         |
 |                                 |
 +---------------------------------+ <--\
 |       DetNet Control Word       |    |
 +=================================+    |
 |            S-Label              |    +----DetNet data plane
 +---------------------------------+    |    MPLS encapsulation
 |            A-Label              |    |
 +---------------------------------+    |
 |           F-Label(s)            | <--/
 +---------------------------------+
 |           Data-Link             |
 +---------------------------------+
 |           Physical              |
 +---------------------------------+
]]></artwork></figure>

  </section>
 </section>

 <section title="Service Sub-Layer Considerations">
   <!-- maybe move this to be under section 5? -->
   <t>
     The edge and relay node internal procedures related to PREOF are
     implementation specific.  The order of a packet elimination or
     replication is out of scope in this specification.
   </t>
   <t>
     It is important that the DetNet layer is configured such that a
     DetNet node never receives its own replicated packets. If it were
     to receive such packets the replication function would make the
     loop more destructive of bandwidth than a conventional unicast
     loop.  Ultimately the TTL in the S-Label will cause the packet to
     die during a transient, but given the sensitivity of applications
     to packet latency the impact on the DetNet application would be
     severe.
   </t>

   <section title="Edge Node Processing" anchor="sec_t_pe">
     <t>
       An edge node is resposable for matching ingress packets to the
       service they require and encapsulating them accordingly.An edge
       node may participate in the packet replication and duplication
       elimination.
     </t>
     <t>
       The DetNet-aware forwarder selects the egress DetNet member flow
       segment based on the flow identification.  The mapping of ingress
       DetNet member flow segment to egress DetNet member flow segment
       may be statically or dynamically configured. Additionally the
       DetNet-aware forwarder does duplicate frame elimination based on
       the flow identification and the sequence number combination. The
       packet replication is also done within the DetNet-aware
       forwarder. During elimination and the replication process the
       sequence number of the DetNet member flow MUST be preserved and
       copied to the egress DetNet member flow.
     </t>
     <t>
       The internal design of a relay node is out of scope of this
       document. However the reader's attention is drawn to the need to
       make any PREOF state available to the packet processor(s) dealing
       with packets to which the PREOF functions must be applied, and to
       maintain that state is such as way that it is available to the
       packet processor operation on the next packet in the DetNet flow
       (which may be a duplicate, a late packet, or the next packet in
       sequence.
     </t>
   </section>


   <section title="Relay Node Processing" anchor="sec_s_pe">
     <t>
       A DetNet Relay node operates in the DetNet forwarding sub-layer
       . This processing is done within an extended forwarder
       function. Whether an ingress DetNet member flow receives DetNet
       specific processing depends on how the forwarding is programmed.
       Some relay nodes may be DetNet service aware, while others may be
       unmodified LSRs that only understand how to swicth MPLS-TE LSPs.
     </t>
     <t>
       It is also possible to treat the relay node as a transit node,
       see <xref target="Aggregation"/>.  Again, this is entirely up to
       how the forwarding has been programmed.
     </t>
   </section>
 </section>

 <section title="Forwarding Sub-Layer Considerations">
   <!-- maybe move this to be under section 5? -->
   <section title="Class of Service" anchor="CoS">
     <t>
       Class and quality of service, i.e., CoS and QoS, are terms that
       are often used interchangeably and confused with each other. In
       the context of DetNet, CoS is used to refer to mechanisms that
       provide traffic forwarding treatment based on aggregate group
       basis and QoS is used to refer to mechanisms that provide traffic
       forwarding treatment based on a specific DetNet flow basis.
       Examples of existing network level CoS mechanisms include
       DiffServ which is enabled by IP header differentiated services
       code point (DSCP) field <xref target="RFC2474"/> and MPLS label
       traffic class field <xref target="RFC5462"/>, and at Layer-2, by
       IEEE 802.1p priority code point (PCP).
     </t>
     <t>
       CoS for DetNet flows carried in PWs and MPLS is provided using
       the existing MPLS Differentiated Services (DiffServ) architecture
       <xref target="RFC3270"/>.  Both E-LSP and L-LSP MPLS DiffServ
       modes MAY be used to support DetNet flows.  The Traffic Class
       field (formerly the EXP field) of an MPLS label follows the
       definition of <xref target="RFC5462"/> and <xref
       target="RFC3270"/>.  The Uniform, Pipe, and Short Pipe DiffServ
       tunneling and TTL processing models are described in <xref
       target="RFC3270"/> and <xref target="RFC3443"/> and MAY be used
       for MPLS LSPs supporting DetNet flows. MPLS ECN MAY also be used
       as defined in ECN <xref target="RFC5129"/> and updated by <xref
       target="RFC5462"/>.
     </t>
   </section>

   <section title="Quality of Service" anchor="QoS">
     <t>
       In addition to explicit routes, and packet replication and
       elimination, described in <xref target="dn-dt-solution"/> above,
       DetNet provides zero congestion loss and bounded latency and
       jitter.  As described in <xref
       target="I-D.ietf-detnet-architecture"/>, there are different
       mechanisms that maybe used separately or in combination to
       deliver a zero congestion loss service.  This includes Quality of
       Service (QoS) mechanisms at the MPLS layer, that may be combined
       with the mechanisms defined by the underlying network layer such
       as 802.1TSN.
     </t>
     <t>
       Quality of Service (QoS) mechanisms for flow specific traffic
       treatment typically includes a guarantee/agreement for the
       service, and allocation of resources to support the service.
       Example QoS mechanisms include discrete resource allocation,
       admission control, flow identification and isolation, and
       sometimes path control, traffic protection, shaping, policing and
       remarking. Example protocols that support QoS control include
       <xref target="RFC2205">Resource ReSerVation Protocol
       (RSVP)</xref> (RSVP) and RSVP-TE <xref target="RFC3209"/> and
       <xref target="RFC3473"/>.  The existing MPLS mechanisms defined
       to support CoS <xref target="RFC3270"/> can also be used to
       reserve resources for specific traffic classes.
     </t>
     <t>
       A baseline set of QoS capabilities for DetNet flows carried in PWs
       and MPLS can provided by MPLS with Traffic Engineering (MPLS-TE)
       <xref target="RFC3209"/> and <xref target="RFC3473"/>.  TE LSPs can
       also support explicit routes (path pinning).  Current service
       definitions for packet TE LSPs can be found in "Specification of
       the Controlled Load Quality of Service", <xref target="RFC2211"/>,
       "Specification of Guaranteed Quality of Service", <xref
       target="RFC2212"/>, and "Ethernet Traffic Parameters", <xref
       target="RFC6003"/>. Additional service definitions are expected in
       future documents to support the full range of DetNet services.
       In all cases, the existing label-based marking mechanisms defined
       for TE-LSPs and even E-LSPs are use to support the identification
       of flows requiring DetNet QoS.
     </t>
   </section>
 </section>
</section>

<!-- ===================================================================== -->


<!-- ===================================================================== -->


<section title="Security Considerations">
  <t>
   The security considerations of DetNet in general are discussed in
   <xref target="I-D.ietf-detnet-architecture"/>
   and <xref target="I-D.sdt-detnet-security"/>. Other security
   considerations will be added in a future version of
   this draft.
  </t>
</section>


<section anchor="iana" title="IANA Considerations">
  <t>
   This document makes no IANA requests.
  </t>
</section>

<section anchor="Contributors" title="Contributors">
 <t>RFC7322 limits the number of authors listed on the front page of a
 draft to a maximum of 5, far fewer than the many individuals below who
 made important contributions to this draft. The editor wishes to thank
 and acknowledge each of the following authors for contributing text to
 this draft. See also <xref target="acks"/>.
 </t>
 <figure> <artwork><![CDATA[
   Loa Andersson
   Huawei
   Email: loa@pi.nu

   Yuanlong Jiang
   Huawei
   Email: jiangyuanlong@huawei.com

   Norman Finn
   Huawei
   3101 Rio Way
   Spring Valley, CA  91977
   USA
   Email: norman.finn@mail01.huawei.com

   Janos Farkas
   Ericsson
   Magyar Tudosok krt. 11.
   Budapest  1117
   Hungary
   Email: janos.farkas@ericsson.com

   Carlos J. Bernardos
   Universidad Carlos III de Madrid
   Av. Universidad, 30
   Leganes, Madrid  28911
   Spain
   Email: cjbc@it.uc3m.es

   Tal Mizrahi
   Marvell
   6 Hamada st.
   Yokneam
   Israel
   Email: talmi@marvell.com

   Lou Berger
   LabN Consulting, L.L.C.
   Email: lberger@labn.net

   Stewart Bryant
   Huawei Technologies
   Email: stewart.bryant@gmail.com

   Mach Chen
   Huawei Technologies
   Email: mach.chen@huawei.com

   Andrew G. Malis
   Huawei Technologies
   Email: agmalis@gmail.com
   ]]></artwork>
 </figure>

</section>


<section anchor="acks" title="Acknowledgements">
  <t>The author(s) ACK and NACK.
  </t>
  <t> The following people were part of the DetNet Data Plane Solution Design Team:
  <list style="bullets">
   <t>Jouni Korhonen</t>
   <t>J&aacute;nos Farkas</t>
   <t>Norman Finn</t>
   <t>Bal&aacute;zs Varga</t>
   <t>Loa Andersson</t>
   <t>Tal Mizrahi</t>
   <t>David Mozes</t>
   <t>Yuanlong Jiang</t>
   <t>Andrew Malis</t>
   <t>Carlos J. Bernardos</t>
  </list></t>
  <t>
   The DetNet chairs serving during the DetNet Data Plane Solution Design Team:
   <list style="bullets">
    <t>Lou Berger</t>
    <t>Pat Thaler</t>
   </list></t>
   <t>
    Thanks for Stewart Bryant for his extensive review of the previous
    versions of the document.
   </t>
</section>
</middle>

<back>
  <references title="Normative References">
   &rfc2119;
   <?rfc include="reference.RFC.2211"?>
   <?rfc include="reference.RFC.2212"?>
   <?rfc include="reference.RFC.3031"?>
   <?rfc include="reference.RFC.3032"?>
   <?rfc include="reference.RFC.3209"?>
   <?rfc include="reference.RFC.3270"?>
   <?rfc include="reference.RFC.3443"?>
   <?rfc include="reference.RFC.3473"?>
   <?rfc include="reference.RFC.4206"?>
   <?rfc include="reference.RFC.5129"?>
   <?rfc include="reference.RFC.5085"?>
   <?rfc include="reference.RFC.5462"?>
   &rfc4385;
   &rfc7510;
   <?rfc include="reference.RFC.8174"?>
  </references>
  <references title="Informative References">
   <?rfc include="reference.RFC.2205"?>
   <?rfc include="reference.RFC.2474"?>
   <?rfc include="reference.RFC.3272"?>
   &rfc3985;
   &rfc4448;
   &rfc4872;
   &rfc4873;
   <?rfc include="reference.RFC.4875"?>
   <?rfc include="reference.RFC.5440"?>
   <?rfc include="reference.RFC.5586"?>
   <?rfc include="reference.RFC.5654"?>
   <?rfc include="reference.RFC.5921"?>
   <?rfc include="reference.RFC.6073"?>
   <?rfc include="reference.RFC.6003"?>
   <?rfc include="reference.RFC.6006"?>
  &rfc6387;
    <?rfc include="reference.RFC.6790"?>
   <?rfc include="reference.RFC.7950"?>
   <?rfc include="reference.RFC.7551"?>
   <?rfc include="reference.RFC.8040"?>
   &I-D.ietf-pce-pcep-extension-for-pce-controller;
&I-D.ietf-detnet-architecture;
&I-D.ietf-detnet-flow-information-model;
   &I-D.ietf-spring-segment-routing-mpls;
   <reference anchor='I-D.ietf-detnet-data-plane-framework'>
     <front>
       <title>DetNet Data Plane Framework
       </title>
       <author>
         <organization>Korhonen, J., Varga, B.</organization>
       </author>
       <date year='2019' />
     </front>
   </reference>
   <reference anchor='I-D.ietf-detnet-mpls-over-udp-ip'>
     <front>
       <title>DetNet MPLS over UDP/IP
       </title>
       <author>
         <organization>Korhonen, J., Varga, B.</organization>
       </author>
       <date year='2019' />
     </front>
   </reference>
   <reference anchor='I-D.ietf-detnet-mpls-over-tsn'>
     <front>
       <title>DetNet MPLS over IEEE 802.1 TSN Sub-Networks
       </title>
       <author>
         <organization>Korhonen, J., Varga, B.</organization>
       </author>
       <date year='2019' />
     </front>
   </reference>
   <reference anchor='I-D.ietf-detnet-ip'>
     <front>
       <title>DetNet IP Data Plane Encapsulation
       </title>
       <author>
         <organization>Korhonen, J., Varga, B.</organization>
       </author>
       <date year='2018' />
     </front>
   </reference>
   &rfc8169;

   <reference anchor='I-D.sdt-detnet-security'>
    <front>
     <title>Deterministic Networking (DetNet) Security Considerations,
		draft-sdt-detnet-security, work in progress
     </title>
     <author>
      <organization>Mizrahi, T., Grossman, E., Hacker, A., Das, S.</organization>
     </author>
     <date year='2017' />
    </front>
   </reference>

   <reference anchor='IEEE1588'>
     <front>
       <title>IEEE 1588 Standard for a Precision Clock Synchronization
       Protocol for Networked Measurement and Control Systems Version 2
       </title>
       <author>
         <organization>IEEE</organization>
       </author>
       <date year='2008' />
     </front>
   </reference>

   <reference anchor="IEEE8021Q"
     target="http://standards.ieee.org/about/get/">
    <front>
     <title>Standard for Local and metropolitan area networks--Bridges and Bridged Networks (IEEE Std 802.1Q-2014)</title>
     <author>
      <organization>IEEE 802.1</organization>
     </author>
     <date year="2014"/>
    </front>
    <format type="PDF" target="http://standards.ieee.org/about/get/"/>
   </reference>

   <reference anchor="IEEE8021CB"
    target="http://www.ieee802.org/1/files/private/cb-drafts/d2/802-1CB-d2-1.pdf">
    <front>
        <title>Draft Standard for Local and metropolitan area networks - Seamless Redundancy</title>
        <author initials="N. F." surname="Finn" fullname="Norman Finn">
            <organization>IEEE 802.1</organization>
        </author>
        <date month="December" year="2015"/>
    </front>
    <seriesInfo name="IEEE P802.1CB /D2.1" value="P802.1CB"/>
    <format type="PDF" target="http://www.ieee802.org/1/files/private/cb-drafts/d2/802-1CB-d2-1.pdf"/>
   </reference>

   <reference anchor="G.8275.1"
              target="https://www.itu.int/rec/T-REC-G.8275.1/en">
     <front>
       <title>Precision time protocol telecom profile for phase/time synchronization with full timing support from the network</title>
       <author>
         <organization>International Telecommunication Union</organization>
       </author>
       <date month="June" year="2016"/>
     </front>
     <seriesInfo name="ITU-T G.8275.1/Y.1369.1" value="G.8275.1"/>
   </reference>

   <reference anchor="G.8275.2"
              target="https://www.itu.int/rec/T-REC-G.8275.2/en">
     <front>
       <title>Precision time protocol telecom profile for phase/time synchronization with partial timing support from the network</title>
       <author>
         <organization>International Telecommunication Union</organization>
       </author>
       <date month="June" year="2016"/>
     </front>
     <seriesInfo name="ITU-T G.8275.2/Y.1369.2" value="G.8275.2"/>
   </reference>

  </references>

 </back>
 </rfc>
